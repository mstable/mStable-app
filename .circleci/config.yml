version: 2.1

executors:
  gcp:
    docker:
      - image: alsco77/node-gcp-dockerfile:suite
    resource_class: medium+
  sentry:
    docker:
      - image: getsentry/sentry-cli:1.55.0
    resource_class: small

jobs:
  buildStaging:
    executor: gcp
    resource_class: medium+
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install
          command: yarn
      - run:
          name: 'Provision (Mimic yarn provision)'
          command: |
            git submodule update --init
            cd ./lib/mStable-subgraph
            yarn provision
      - run:
          name: Codegen (TypeChain)
          command: yarn codegen:typechain
      - run:
          name: TypeScript
          command: yarn tsc --noEmit
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Test
          command: yarn test --passWithNoTests
      - run:
          name: Build
          command: yarn build:staging
      - persist_to_workspace:
          root: ~/
          paths:
            - project/build
            - project/public
            - project/package.json
            - project/*
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
  buildProd:
    executor: gcp
    resource_class: medium+
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install
          command: yarn
      - run:
          name: 'Provision (Mimic yarn provision)'
          command: |
            git submodule update --init
            cd ./lib/mStable-subgraph
            yarn provision
      - run:
          name: Codegen (TypeChain)
          command: yarn codegen:typechain
      - run:
          name: TypeScript
          command: yarn tsc --noEmit
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Test
          command: yarn test --passWithNoTests
      - run:
          name: Build
          command: yarn build
      - persist_to_workspace:
          root: ~/
          paths:
            - project/build
            - project/public
            - project/package.json
            - project/*
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
  deployStaging:
    executor: gcp
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: 'Deploy'
          command: |
            echo "Deploy to staging target GAE instance with project ID $S_GCP_PROJECT_ID"
            echo $S_GCP_KEY > /tmp/$CI_PIPELINE_ID.json
            gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
            gcloud config set project $S_GCP_PROJECT_ID
            gcloud --quiet app deploy app.yml
  deployProd:
    executor: gcp
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: 'Deploy'
          command: |
            echo "Deploy to prod target GAE instance with project ID $P_GCP_PROJECT_ID"
            echo $P_GCP_KEY > /tmp/$CI_PIPELINE_ID.json
            gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
            gcloud config set project $P_GCP_PROJECT_ID
            gcloud --quiet app deploy app.yml
  sentryRelease:
    executor: sentry
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: 'Sentry release'
          command: |
            PACKAGE_VERSION=$(cat package.json \
              | grep version \
              | head -1 \
              | awk -F: '{ print $2 }' \
              | sed 's/[",]//g')
            SENTRY_RELEASE="$PACKAGE_VERSION-$(sentry-cli releases propose-version)"
            sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
            sentry-cli releases set-commits --auto $SENTRY_RELEASE
            sentry-cli releases files $PACKAGE_VERSION upload-sourcemaps './build/static/js' --rewrite --url-prefix './build/static/js'
            sentry-cli releases finalize $SENTRY_RELEASE
workflows:
  version: 2.1
  staging:
    jobs:
      - buildStaging
      - Approval:
          type: approval
      - deployStaging:
          requires:
            - Approval
            - buildStaging
  prod:
    jobs:
      - Approval:
          type: approval
      - buildProd:
          requires:
            - Approval
      - deployProd:
          requires:
            - buildProd
      - sentryRelease:
          requires:
            - deployProd
