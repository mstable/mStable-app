# import './fragments.graphql'

query CoreTokens {
  mUSD: tokens(where: { symbol: "mUSD" }) {
    ...TokenDetails
  }
  #    mta: tokens(where: { symbol: "MTA" }) {
  #        ...TokenDetails
  #    }
  #    mGLD: tokens(where: { symbol: "mGLD" }) {
  #        ...TokenDetails
  #    }
  mUSDSavings: savingsContracts(first: 1) {
      id
  }
}

query Masset($id: ID!) {
    masset(id: $id) {
        id
        token {
            ...TokenDetails
        }
        feeRate
        basket {
            failed
            collateralisationRatio
            undergoingRecol
            bassets {
                id
                vaultBalance
                isTransferFeeCharged
                ratio
                status
                maxWeight
                token {
                    ...TokenDetails
                }
            }
        }
    }
}

query Erc20Tokens($addresses: [Bytes!]!) {
    tokens(where: { address_in: $addresses }) {
        ...TokenDetails
    }
}

query AllErc20Tokens {
    tokens {
        ...TokenDetails
    }
}

query TokenByAddress($id: ID!) {
    token(id: $id) {
        id
        address
        decimals
        name
        symbol
        totalBurned
        totalBurned
        totalSupply
        totalTransferred
    }
}

query LastExchangeRateBeforeTimestamp($timestamp: Int!) {
    exchangeRates(
        where: { timestamp_lt: $timestamp }
        orderDirection: desc
        orderBy: timestamp
        first: 1
    ) {
        exchangeRate
        timestamp
    }
}


query SavingsContract($id: ID!) {
    savingsContracts(where: { id: $id }) {
        id
        totalSavings
        totalCredits
        exchangeRates {
            id
        }
        savingsRate
        automationEnabled
    }
}
