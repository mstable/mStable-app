schema {
  query: Query
  subscription: Subscription
}
type Query {
  token(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Token
  tokens(
    skip: Int = 0
    first: Int = 100
    orderBy: Token_orderBy
    orderDirection: OrderDirection
    where: Token_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Token!]!
  metric(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Metric
  metrics(
    skip: Int = 0
    first: Int = 100
    orderBy: Metric_orderBy
    orderDirection: OrderDirection
    where: Metric_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Metric!]!
  counter(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Counter
  counters(
    skip: Int = 0
    first: Int = 100
    orderBy: Counter_orderBy
    orderDirection: OrderDirection
    where: Counter_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Counter!]!
  basset(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Basset
  bassets(
    skip: Int = 0
    first: Int = 100
    orderBy: Basset_orderBy
    orderDirection: OrderDirection
    where: Basset_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Basset!]!
  basket(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Basket
  baskets(
    skip: Int = 0
    first: Int = 100
    orderBy: Basket_orderBy
    orderDirection: OrderDirection
    where: Basket_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Basket!]!
  masset(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Masset
  massets(
    skip: Int = 0
    first: Int = 100
    orderBy: Masset_orderBy
    orderDirection: OrderDirection
    where: Masset_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Masset!]!
  account(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Account
  accounts(
    skip: Int = 0
    first: Int = 100
    orderBy: Account_orderBy
    orderDirection: OrderDirection
    where: Account_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Account!]!
  creditBalance(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): CreditBalance
  creditBalances(
    skip: Int = 0
    first: Int = 100
    orderBy: CreditBalance_orderBy
    orderDirection: OrderDirection
    where: CreditBalance_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [CreditBalance!]!
  savingsContract(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): SavingsContract
  savingsContracts(
    skip: Int = 0
    first: Int = 100
    orderBy: SavingsContract_orderBy
    orderDirection: OrderDirection
    where: SavingsContract_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [SavingsContract!]!
  exchangeRate(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): ExchangeRate
  exchangeRates(
    skip: Int = 0
    first: Int = 100
    orderBy: ExchangeRate_orderBy
    orderDirection: OrderDirection
    where: ExchangeRate_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [ExchangeRate!]!
  swapTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): SwapTransaction
  swapTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: SwapTransaction_orderBy
    orderDirection: OrderDirection
    where: SwapTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [SwapTransaction!]!
  paidFeeTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): PaidFeeTransaction
  paidFeeTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: PaidFeeTransaction_orderBy
    orderDirection: OrderDirection
    where: PaidFeeTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [PaidFeeTransaction!]!
  mintSingleTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): MintSingleTransaction
  mintSingleTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: MintSingleTransaction_orderBy
    orderDirection: OrderDirection
    where: MintSingleTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [MintSingleTransaction!]!
  mintMultiTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): MintMultiTransaction
  mintMultiTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: MintMultiTransaction_orderBy
    orderDirection: OrderDirection
    where: MintMultiTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [MintMultiTransaction!]!
  redeemTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): RedeemTransaction
  redeemTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: RedeemTransaction_orderBy
    orderDirection: OrderDirection
    where: RedeemTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [RedeemTransaction!]!
  redeemMassetTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): RedeemMassetTransaction
  redeemMassetTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: RedeemMassetTransaction_orderBy
    orderDirection: OrderDirection
    where: RedeemMassetTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [RedeemMassetTransaction!]!
  savingsContractDepositTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): SavingsContractDepositTransaction
  savingsContractDepositTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: SavingsContractDepositTransaction_orderBy
    orderDirection: OrderDirection
    where: SavingsContractDepositTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [SavingsContractDepositTransaction!]!
  savingsContractWithdrawTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): SavingsContractWithdrawTransaction
  savingsContractWithdrawTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: SavingsContractWithdrawTransaction_orderBy
    orderDirection: OrderDirection
    where: SavingsContractWithdrawTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [SavingsContractWithdrawTransaction!]!
  transaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Transaction
  transactions(
    skip: Int = 0
    first: Int = 100
    orderBy: Transaction_orderBy
    orderDirection: OrderDirection
    where: Transaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Transaction!]!
  """Access to subgraph metadata"""
  _meta(block: Block_height): _Meta_
}
input Block_height {
  hash: Bytes
  number: Int
}
scalar Bytes
"""An ERC20-compatible token"""
type Token {
  id: ID!
  """Token address"""
  address: Bytes!
  """Token decimals"""
  decimals: Int!
  """Token name"""
  name: String!
  """Token symbol"""
  symbol: String!
  """Total supply of the token"""
  totalSupply: Metric!
  """Total quantity of tokens burned"""
  totalBurned: Metric!
  """Total quantity of tokens minted"""
  totalMinted: Metric!
  """Count of transfer transactions"""
  totalTransfers: Counter!
  """Count of transfer transactions that minted the token"""
  totalMints: Counter!
  """Count of transfer transactions that burned the token"""
  totalBurns: Counter!
}
type Metric {
  id: ID!
  """Exact value of the metric, i.e. in base units as an integer"""
  exact: BigInt!
  """Decimals used for the exact value (default: 18)"""
  decimals: Int!
  """Simple value of the metric, i.e. the exact value represented as a decimal"""
  simple: BigDecimal!
}
scalar BigInt
scalar BigDecimal
type Counter {
  id: ID!
  """Value of the counter; should be positive"""
  value: BigInt!
}
enum Token_orderBy {
  id
  address
  decimals
  name
  symbol
  totalSupply
  totalBurned
  totalMinted
  totalTransfers
  totalMints
  totalBurns
}
enum OrderDirection {
  asc
  desc
}
input Token_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  address: Bytes
  address_not: Bytes
  address_in: [Bytes!]
  address_not_in: [Bytes!]
  address_contains: Bytes
  address_not_contains: Bytes
  decimals: Int
  decimals_not: Int
  decimals_gt: Int
  decimals_lt: Int
  decimals_gte: Int
  decimals_lte: Int
  decimals_in: [Int!]
  decimals_not_in: [Int!]
  name: String
  name_not: String
  name_gt: String
  name_lt: String
  name_gte: String
  name_lte: String
  name_in: [String!]
  name_not_in: [String!]
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  symbol: String
  symbol_not: String
  symbol_gt: String
  symbol_lt: String
  symbol_gte: String
  symbol_lte: String
  symbol_in: [String!]
  symbol_not_in: [String!]
  symbol_contains: String
  symbol_not_contains: String
  symbol_starts_with: String
  symbol_not_starts_with: String
  symbol_ends_with: String
  symbol_not_ends_with: String
  totalSupply: String
  totalSupply_not: String
  totalSupply_gt: String
  totalSupply_lt: String
  totalSupply_gte: String
  totalSupply_lte: String
  totalSupply_in: [String!]
  totalSupply_not_in: [String!]
  totalSupply_contains: String
  totalSupply_not_contains: String
  totalSupply_starts_with: String
  totalSupply_not_starts_with: String
  totalSupply_ends_with: String
  totalSupply_not_ends_with: String
  totalBurned: String
  totalBurned_not: String
  totalBurned_gt: String
  totalBurned_lt: String
  totalBurned_gte: String
  totalBurned_lte: String
  totalBurned_in: [String!]
  totalBurned_not_in: [String!]
  totalBurned_contains: String
  totalBurned_not_contains: String
  totalBurned_starts_with: String
  totalBurned_not_starts_with: String
  totalBurned_ends_with: String
  totalBurned_not_ends_with: String
  totalMinted: String
  totalMinted_not: String
  totalMinted_gt: String
  totalMinted_lt: String
  totalMinted_gte: String
  totalMinted_lte: String
  totalMinted_in: [String!]
  totalMinted_not_in: [String!]
  totalMinted_contains: String
  totalMinted_not_contains: String
  totalMinted_starts_with: String
  totalMinted_not_starts_with: String
  totalMinted_ends_with: String
  totalMinted_not_ends_with: String
  totalTransfers: String
  totalTransfers_not: String
  totalTransfers_gt: String
  totalTransfers_lt: String
  totalTransfers_gte: String
  totalTransfers_lte: String
  totalTransfers_in: [String!]
  totalTransfers_not_in: [String!]
  totalTransfers_contains: String
  totalTransfers_not_contains: String
  totalTransfers_starts_with: String
  totalTransfers_not_starts_with: String
  totalTransfers_ends_with: String
  totalTransfers_not_ends_with: String
  totalMints: String
  totalMints_not: String
  totalMints_gt: String
  totalMints_lt: String
  totalMints_gte: String
  totalMints_lte: String
  totalMints_in: [String!]
  totalMints_not_in: [String!]
  totalMints_contains: String
  totalMints_not_contains: String
  totalMints_starts_with: String
  totalMints_not_starts_with: String
  totalMints_ends_with: String
  totalMints_not_ends_with: String
  totalBurns: String
  totalBurns_not: String
  totalBurns_gt: String
  totalBurns_lt: String
  totalBurns_gte: String
  totalBurns_lte: String
  totalBurns_in: [String!]
  totalBurns_not_in: [String!]
  totalBurns_contains: String
  totalBurns_not_contains: String
  totalBurns_starts_with: String
  totalBurns_not_starts_with: String
  totalBurns_ends_with: String
  totalBurns_not_ends_with: String
}
enum Metric_orderBy {
  id
  exact
  decimals
  simple
}
input Metric_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  exact: BigInt
  exact_not: BigInt
  exact_gt: BigInt
  exact_lt: BigInt
  exact_gte: BigInt
  exact_lte: BigInt
  exact_in: [BigInt!]
  exact_not_in: [BigInt!]
  decimals: Int
  decimals_not: Int
  decimals_gt: Int
  decimals_lt: Int
  decimals_gte: Int
  decimals_lte: Int
  decimals_in: [Int!]
  decimals_not_in: [Int!]
  simple: BigDecimal
  simple_not: BigDecimal
  simple_gt: BigDecimal
  simple_lt: BigDecimal
  simple_gte: BigDecimal
  simple_lte: BigDecimal
  simple_in: [BigDecimal!]
  simple_not_in: [BigDecimal!]
}
enum Counter_orderBy {
  id
  value
}
input Counter_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  value: BigInt
  value_not: BigInt
  value_gt: BigInt
  value_lt: BigInt
  value_gte: BigInt
  value_lte: BigInt
  value_in: [BigInt!]
  value_not_in: [BigInt!]
}
"""Basket Asset (e.g. DAI for the mUSD basket)"""
type Basset {
  """Address of the Basset token contract"""
  id: ID!
  """Basket the Basset is contained in"""
  basket: Basket!
  """Target weight of the Basset"""
  maxWeight: BigInt!
  """Basset to Masset ratio for quantity conversion"""
  ratio: BigInt!
  """Flag that is set when the bAsset is removed from the basket (and unset when added)"""
  removed: Boolean!
  """Status of the Basset, e.g. 'Normal'"""
  status: String!
  """An ERC20 can charge transfer fee, e.g. USDT or DGX tokens"""
  isTransferFeeCharged: Boolean!
  """The underlying Token for the Basset"""
  token: Token!
  """Amount of the Basset that is held in collateral"""
  vaultBalance: Metric!
  """Total number of mint transactions in which the Basset was an input"""
  totalMints: Counter!
  """Total number of swap transactions in which the Basset was an input"""
  totalSwapsAsInput: Counter!
  """Total number of swap transactions in which the Basset was an output"""
  totalSwapsAsOutput: Counter!
  """Total number of redemption transactions in which the Basset was an output"""
  totalRedemptions: Counter!
  """Total supply of the Basset token"""
  totalSupply: Metric!
  """Cumulative amount of the Basset that was used in mint transactions as input"""
  cumulativeMinted: Metric!
  """Cumulative amount of the Basset that was used in swap transactions as output"""
  cumulativeSwappedAsOutput: Metric!
  """Cumulative amount of the Basset that was used in redemption transactions as output (excluding proportional redemption)"""
  cumulativeRedeemed: Metric!
  """Cumulative amount of fees paid (e.g. for swaps and redemptions) using this Basset"""
  cumulativeFeesPaid: Metric!
}
"""A Basket of Bassets (e.g. for mUSD)"""
type Basket {
  id: ID!
  """The Bassets in the Basket"""
  bassets(skip: Int = 0, first: Int = 100, orderBy: Basset_orderBy, orderDirection: OrderDirection, where: Basset_filter): [Basset!]!
  """The collateralisation ratio of the Basket"""
  collateralisationRatio: BigInt!
  """Max number of Bassets that can be present in the Basket"""
  maxBassets: Int!
  """Flag for whether the Basket has failed"""
  undergoingRecol: Boolean!
  """Flag for whether the Basket has failed"""
  failed: Boolean!
  """Masset the Basket belongs to"""
  masset: Masset!
}
enum Basset_orderBy {
  id
  basket
  maxWeight
  ratio
  removed
  status
  isTransferFeeCharged
  token
  vaultBalance
  totalMints
  totalSwapsAsInput
  totalSwapsAsOutput
  totalRedemptions
  totalSupply
  cumulativeMinted
  cumulativeSwappedAsOutput
  cumulativeRedeemed
  cumulativeFeesPaid
}
input Basset_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  maxWeight: BigInt
  maxWeight_not: BigInt
  maxWeight_gt: BigInt
  maxWeight_lt: BigInt
  maxWeight_gte: BigInt
  maxWeight_lte: BigInt
  maxWeight_in: [BigInt!]
  maxWeight_not_in: [BigInt!]
  ratio: BigInt
  ratio_not: BigInt
  ratio_gt: BigInt
  ratio_lt: BigInt
  ratio_gte: BigInt
  ratio_lte: BigInt
  ratio_in: [BigInt!]
  ratio_not_in: [BigInt!]
  removed: Boolean
  removed_not: Boolean
  removed_in: [Boolean!]
  removed_not_in: [Boolean!]
  status: String
  status_not: String
  status_gt: String
  status_lt: String
  status_gte: String
  status_lte: String
  status_in: [String!]
  status_not_in: [String!]
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  isTransferFeeCharged: Boolean
  isTransferFeeCharged_not: Boolean
  isTransferFeeCharged_in: [Boolean!]
  isTransferFeeCharged_not_in: [Boolean!]
  token: String
  token_not: String
  token_gt: String
  token_lt: String
  token_gte: String
  token_lte: String
  token_in: [String!]
  token_not_in: [String!]
  token_contains: String
  token_not_contains: String
  token_starts_with: String
  token_not_starts_with: String
  token_ends_with: String
  token_not_ends_with: String
  vaultBalance: String
  vaultBalance_not: String
  vaultBalance_gt: String
  vaultBalance_lt: String
  vaultBalance_gte: String
  vaultBalance_lte: String
  vaultBalance_in: [String!]
  vaultBalance_not_in: [String!]
  vaultBalance_contains: String
  vaultBalance_not_contains: String
  vaultBalance_starts_with: String
  vaultBalance_not_starts_with: String
  vaultBalance_ends_with: String
  vaultBalance_not_ends_with: String
  totalMints: String
  totalMints_not: String
  totalMints_gt: String
  totalMints_lt: String
  totalMints_gte: String
  totalMints_lte: String
  totalMints_in: [String!]
  totalMints_not_in: [String!]
  totalMints_contains: String
  totalMints_not_contains: String
  totalMints_starts_with: String
  totalMints_not_starts_with: String
  totalMints_ends_with: String
  totalMints_not_ends_with: String
  totalSwapsAsInput: String
  totalSwapsAsInput_not: String
  totalSwapsAsInput_gt: String
  totalSwapsAsInput_lt: String
  totalSwapsAsInput_gte: String
  totalSwapsAsInput_lte: String
  totalSwapsAsInput_in: [String!]
  totalSwapsAsInput_not_in: [String!]
  totalSwapsAsInput_contains: String
  totalSwapsAsInput_not_contains: String
  totalSwapsAsInput_starts_with: String
  totalSwapsAsInput_not_starts_with: String
  totalSwapsAsInput_ends_with: String
  totalSwapsAsInput_not_ends_with: String
  totalSwapsAsOutput: String
  totalSwapsAsOutput_not: String
  totalSwapsAsOutput_gt: String
  totalSwapsAsOutput_lt: String
  totalSwapsAsOutput_gte: String
  totalSwapsAsOutput_lte: String
  totalSwapsAsOutput_in: [String!]
  totalSwapsAsOutput_not_in: [String!]
  totalSwapsAsOutput_contains: String
  totalSwapsAsOutput_not_contains: String
  totalSwapsAsOutput_starts_with: String
  totalSwapsAsOutput_not_starts_with: String
  totalSwapsAsOutput_ends_with: String
  totalSwapsAsOutput_not_ends_with: String
  totalRedemptions: String
  totalRedemptions_not: String
  totalRedemptions_gt: String
  totalRedemptions_lt: String
  totalRedemptions_gte: String
  totalRedemptions_lte: String
  totalRedemptions_in: [String!]
  totalRedemptions_not_in: [String!]
  totalRedemptions_contains: String
  totalRedemptions_not_contains: String
  totalRedemptions_starts_with: String
  totalRedemptions_not_starts_with: String
  totalRedemptions_ends_with: String
  totalRedemptions_not_ends_with: String
  totalSupply: String
  totalSupply_not: String
  totalSupply_gt: String
  totalSupply_lt: String
  totalSupply_gte: String
  totalSupply_lte: String
  totalSupply_in: [String!]
  totalSupply_not_in: [String!]
  totalSupply_contains: String
  totalSupply_not_contains: String
  totalSupply_starts_with: String
  totalSupply_not_starts_with: String
  totalSupply_ends_with: String
  totalSupply_not_ends_with: String
  cumulativeMinted: String
  cumulativeMinted_not: String
  cumulativeMinted_gt: String
  cumulativeMinted_lt: String
  cumulativeMinted_gte: String
  cumulativeMinted_lte: String
  cumulativeMinted_in: [String!]
  cumulativeMinted_not_in: [String!]
  cumulativeMinted_contains: String
  cumulativeMinted_not_contains: String
  cumulativeMinted_starts_with: String
  cumulativeMinted_not_starts_with: String
  cumulativeMinted_ends_with: String
  cumulativeMinted_not_ends_with: String
  cumulativeSwappedAsOutput: String
  cumulativeSwappedAsOutput_not: String
  cumulativeSwappedAsOutput_gt: String
  cumulativeSwappedAsOutput_lt: String
  cumulativeSwappedAsOutput_gte: String
  cumulativeSwappedAsOutput_lte: String
  cumulativeSwappedAsOutput_in: [String!]
  cumulativeSwappedAsOutput_not_in: [String!]
  cumulativeSwappedAsOutput_contains: String
  cumulativeSwappedAsOutput_not_contains: String
  cumulativeSwappedAsOutput_starts_with: String
  cumulativeSwappedAsOutput_not_starts_with: String
  cumulativeSwappedAsOutput_ends_with: String
  cumulativeSwappedAsOutput_not_ends_with: String
  cumulativeRedeemed: String
  cumulativeRedeemed_not: String
  cumulativeRedeemed_gt: String
  cumulativeRedeemed_lt: String
  cumulativeRedeemed_gte: String
  cumulativeRedeemed_lte: String
  cumulativeRedeemed_in: [String!]
  cumulativeRedeemed_not_in: [String!]
  cumulativeRedeemed_contains: String
  cumulativeRedeemed_not_contains: String
  cumulativeRedeemed_starts_with: String
  cumulativeRedeemed_not_starts_with: String
  cumulativeRedeemed_ends_with: String
  cumulativeRedeemed_not_ends_with: String
  cumulativeFeesPaid: String
  cumulativeFeesPaid_not: String
  cumulativeFeesPaid_gt: String
  cumulativeFeesPaid_lt: String
  cumulativeFeesPaid_gte: String
  cumulativeFeesPaid_lte: String
  cumulativeFeesPaid_in: [String!]
  cumulativeFeesPaid_not_in: [String!]
  cumulativeFeesPaid_contains: String
  cumulativeFeesPaid_not_contains: String
  cumulativeFeesPaid_starts_with: String
  cumulativeFeesPaid_not_starts_with: String
  cumulativeFeesPaid_ends_with: String
  cumulativeFeesPaid_not_ends_with: String
}
"""An mStable asset (e.g. mUSD)"""
type Masset {
  """Address of the Masset contract"""
  id: ID!
  """The Basket of Bassets for this Masset"""
  basket: Basket!
  """The address of the `BasketManager` contract for this Masset"""
  basketManager: Bytes!
  """The swap fee rate"""
  feeRate: BigInt!
  """The redemption fee rate"""
  redemptionFeeRate: BigInt!
  """Total number of mint transactions for this Masset"""
  totalMints: Counter!
  """Total number of swap transactions for this Masset"""
  totalSwaps: Counter!
  """Total number of redemption transactions for this Masset (excluding proportional redemption)"""
  totalRedemptions: Counter!
  """Total number of proportional redemption (i.e. `RedeemMasset`) transactions for this Masset"""
  totalRedeemMassets: Counter!
  """Total supply of the Masset token"""
  totalSupply: Metric!
  """Cumulative amount of this Masset that has been minted"""
  cumulativeMinted: Metric!
  """Cumulative amount of this Masset that has been swapped"""
  cumulativeSwapped: Metric!
  """Cumulative amount of this Masset that has been redeemed"""
  cumulativeRedeemed: Metric!
  """Cumulative amount of this Masset that has been proportionally redeemed (i.e. `RedeemMasset`)"""
  cumulativeRedeemedMasset: Metric!
  """Cumulative amount of fees paid (e.g. for swaps and redemptions) for this Masset"""
  cumulativeFeesPaid: Metric!
  """The underlying Token for this Masset"""
  token: Token!
  """All savings Contracts for this Masset"""
  savingsContracts(skip: Int = 0, first: Int = 100, orderBy: SavingsContract_orderBy, orderDirection: OrderDirection, where: SavingsContract_filter): [SavingsContract!]!
  """All swap transactions sent with this Masset"""
  swapTransactions(skip: Int = 0, first: Int = 100, orderBy: SwapTransaction_orderBy, orderDirection: OrderDirection, where: SwapTransaction_filter): [SwapTransaction!]!
  """All transactions sent with this Masset where a fee was paid"""
  paidFeeTransactions(skip: Int = 0, first: Int = 100, orderBy: PaidFeeTransaction_orderBy, orderDirection: OrderDirection, where: PaidFeeTransaction_filter): [PaidFeeTransaction!]!
  """All proportional redemption (`RedeemMasset`) transactions sent with this Masset"""
  redeemMassetTransactions(skip: Int = 0, first: Int = 100, orderBy: RedeemMassetTransaction_orderBy, orderDirection: OrderDirection, where: RedeemMassetTransaction_filter): [RedeemMassetTransaction!]!
  """All mint-multi transactions sent with this Masset"""
  mintMultiTransactions(skip: Int = 0, first: Int = 100, orderBy: MintMultiTransaction_orderBy, orderDirection: OrderDirection, where: MintMultiTransaction_filter): [MintMultiTransaction!]!
  """All mint-single transactions sent with this Masset"""
  mintSingleTransactions(skip: Int = 0, first: Int = 100, orderBy: MintSingleTransaction_orderBy, orderDirection: OrderDirection, where: MintSingleTransaction_filter): [MintSingleTransaction!]!
  """All redemption transactions sent with this Masset (excluding proportional redemptions)"""
  redeemTransactions(skip: Int = 0, first: Int = 100, orderBy: RedeemTransaction_orderBy, orderDirection: OrderDirection, where: RedeemTransaction_filter): [RedeemTransaction!]!
}
enum SavingsContract_orderBy {
  id
  masset
  totalSavings
  totalCredits
  totalDeposits
  totalWithdrawals
  cumulativeDeposited
  cumulativeWithdrawn
  dailyAPY
  utilisationRate
  automationEnabled
  latestExchangeRate
  exchangeRate24hAgo
  creditBalances
  exchangeRates
  depositTransactions
  withdrawTransactions
  version
  token
}
input SavingsContract_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  masset: String
  masset_not: String
  masset_gt: String
  masset_lt: String
  masset_gte: String
  masset_lte: String
  masset_in: [String!]
  masset_not_in: [String!]
  masset_contains: String
  masset_not_contains: String
  masset_starts_with: String
  masset_not_starts_with: String
  masset_ends_with: String
  masset_not_ends_with: String
  totalSavings: String
  totalSavings_not: String
  totalSavings_gt: String
  totalSavings_lt: String
  totalSavings_gte: String
  totalSavings_lte: String
  totalSavings_in: [String!]
  totalSavings_not_in: [String!]
  totalSavings_contains: String
  totalSavings_not_contains: String
  totalSavings_starts_with: String
  totalSavings_not_starts_with: String
  totalSavings_ends_with: String
  totalSavings_not_ends_with: String
  totalCredits: String
  totalCredits_not: String
  totalCredits_gt: String
  totalCredits_lt: String
  totalCredits_gte: String
  totalCredits_lte: String
  totalCredits_in: [String!]
  totalCredits_not_in: [String!]
  totalCredits_contains: String
  totalCredits_not_contains: String
  totalCredits_starts_with: String
  totalCredits_not_starts_with: String
  totalCredits_ends_with: String
  totalCredits_not_ends_with: String
  totalDeposits: String
  totalDeposits_not: String
  totalDeposits_gt: String
  totalDeposits_lt: String
  totalDeposits_gte: String
  totalDeposits_lte: String
  totalDeposits_in: [String!]
  totalDeposits_not_in: [String!]
  totalDeposits_contains: String
  totalDeposits_not_contains: String
  totalDeposits_starts_with: String
  totalDeposits_not_starts_with: String
  totalDeposits_ends_with: String
  totalDeposits_not_ends_with: String
  totalWithdrawals: String
  totalWithdrawals_not: String
  totalWithdrawals_gt: String
  totalWithdrawals_lt: String
  totalWithdrawals_gte: String
  totalWithdrawals_lte: String
  totalWithdrawals_in: [String!]
  totalWithdrawals_not_in: [String!]
  totalWithdrawals_contains: String
  totalWithdrawals_not_contains: String
  totalWithdrawals_starts_with: String
  totalWithdrawals_not_starts_with: String
  totalWithdrawals_ends_with: String
  totalWithdrawals_not_ends_with: String
  cumulativeDeposited: String
  cumulativeDeposited_not: String
  cumulativeDeposited_gt: String
  cumulativeDeposited_lt: String
  cumulativeDeposited_gte: String
  cumulativeDeposited_lte: String
  cumulativeDeposited_in: [String!]
  cumulativeDeposited_not_in: [String!]
  cumulativeDeposited_contains: String
  cumulativeDeposited_not_contains: String
  cumulativeDeposited_starts_with: String
  cumulativeDeposited_not_starts_with: String
  cumulativeDeposited_ends_with: String
  cumulativeDeposited_not_ends_with: String
  cumulativeWithdrawn: String
  cumulativeWithdrawn_not: String
  cumulativeWithdrawn_gt: String
  cumulativeWithdrawn_lt: String
  cumulativeWithdrawn_gte: String
  cumulativeWithdrawn_lte: String
  cumulativeWithdrawn_in: [String!]
  cumulativeWithdrawn_not_in: [String!]
  cumulativeWithdrawn_contains: String
  cumulativeWithdrawn_not_contains: String
  cumulativeWithdrawn_starts_with: String
  cumulativeWithdrawn_not_starts_with: String
  cumulativeWithdrawn_ends_with: String
  cumulativeWithdrawn_not_ends_with: String
  dailyAPY: BigDecimal
  dailyAPY_not: BigDecimal
  dailyAPY_gt: BigDecimal
  dailyAPY_lt: BigDecimal
  dailyAPY_gte: BigDecimal
  dailyAPY_lte: BigDecimal
  dailyAPY_in: [BigDecimal!]
  dailyAPY_not_in: [BigDecimal!]
  utilisationRate: String
  utilisationRate_not: String
  utilisationRate_gt: String
  utilisationRate_lt: String
  utilisationRate_gte: String
  utilisationRate_lte: String
  utilisationRate_in: [String!]
  utilisationRate_not_in: [String!]
  utilisationRate_contains: String
  utilisationRate_not_contains: String
  utilisationRate_starts_with: String
  utilisationRate_not_starts_with: String
  utilisationRate_ends_with: String
  utilisationRate_not_ends_with: String
  automationEnabled: Boolean
  automationEnabled_not: Boolean
  automationEnabled_in: [Boolean!]
  automationEnabled_not_in: [Boolean!]
  latestExchangeRate: String
  latestExchangeRate_not: String
  latestExchangeRate_gt: String
  latestExchangeRate_lt: String
  latestExchangeRate_gte: String
  latestExchangeRate_lte: String
  latestExchangeRate_in: [String!]
  latestExchangeRate_not_in: [String!]
  latestExchangeRate_contains: String
  latestExchangeRate_not_contains: String
  latestExchangeRate_starts_with: String
  latestExchangeRate_not_starts_with: String
  latestExchangeRate_ends_with: String
  latestExchangeRate_not_ends_with: String
  exchangeRate24hAgo: String
  exchangeRate24hAgo_not: String
  exchangeRate24hAgo_gt: String
  exchangeRate24hAgo_lt: String
  exchangeRate24hAgo_gte: String
  exchangeRate24hAgo_lte: String
  exchangeRate24hAgo_in: [String!]
  exchangeRate24hAgo_not_in: [String!]
  exchangeRate24hAgo_contains: String
  exchangeRate24hAgo_not_contains: String
  exchangeRate24hAgo_starts_with: String
  exchangeRate24hAgo_not_starts_with: String
  exchangeRate24hAgo_ends_with: String
  exchangeRate24hAgo_not_ends_with: String
  version: Int
  version_not: Int
  version_gt: Int
  version_lt: Int
  version_gte: Int
  version_lte: Int
  version_in: [Int!]
  version_not_in: [Int!]
  token: String
  token_not: String
  token_gt: String
  token_lt: String
  token_gte: String
  token_lte: String
  token_in: [String!]
  token_not_in: [String!]
  token_contains: String
  token_not_contains: String
  token_starts_with: String
  token_not_starts_with: String
  token_ends_with: String
  token_not_ends_with: String
}
type SavingsContract {
  """Address of the SavingsContract"""
  id: ID!
  """The Masset using this SavingsContract"""
  masset: Masset!
  """The amount of underlying savings in the contract"""
  totalSavings: Metric!
  """
  Total number of savings credits issued (v1 only)
  @deprecated
  """
  totalCredits: Metric
  """The total number of deposits made"""
  totalDeposits: Counter!
  """The total number of withdrawals made"""
  totalWithdrawals: Counter!
  """The cumulative amount of savings deposited"""
  cumulativeDeposited: Metric!
  """The cumulative amount of savings withdrawn"""
  cumulativeWithdrawn: Metric!
  """
  The daily APY value; this is derived from the `ExchangeRate` closest to 24h ago from the last-received
  `ExchangeRate`, and will change whenever a new `ExchangeRate` is created.
  """
  dailyAPY: BigDecimal!
  """
  The share of the Masset that is deposited in the Savings Contract; a rate of 100% would mean all of the
  Masset being deposited in the Savings Contract.
  """
  utilisationRate: Metric!
  """Flag for whether the automatic collection of interest is enabled."""
  automationEnabled: Boolean!
  """The latest exchange rate that was received"""
  latestExchangeRate: ExchangeRate
  """
  The exchange rate that is closest to 24h ago from the latest exchange rate;
  used to derive daily APYs.
  """
  exchangeRate24hAgo: ExchangeRate
  """All credit balances relating to this Savings Contract."""
  creditBalances(skip: Int = 0, first: Int = 100, orderBy: CreditBalance_orderBy, orderDirection: OrderDirection, where: CreditBalance_filter): [CreditBalance!]!
  """All exchange rates relating to this Savings Contract."""
  exchangeRates(skip: Int = 0, first: Int = 100, orderBy: ExchangeRate_orderBy, orderDirection: OrderDirection, where: ExchangeRate_filter): [ExchangeRate!]!
  """All deposit transactions sent with this Savings Contract."""
  depositTransactions(skip: Int = 0, first: Int = 100, orderBy: SavingsContractDepositTransaction_orderBy, orderDirection: OrderDirection, where: SavingsContractDepositTransaction_filter): [SavingsContractDepositTransaction!]!
  """All withdraw transactions sent with this Savings Contract."""
  withdrawTransactions(skip: Int = 0, first: Int = 100, orderBy: SavingsContractWithdrawTransaction_orderBy, orderDirection: OrderDirection, where: SavingsContractWithdrawTransaction_filter): [SavingsContractWithdrawTransaction!]!
  """
  Version of the savings contract (starting from 1). This value will never change for each entity,
  and can be used to determine the features of the contract.
  """
  version: Int!
  """
  This field is not present in v1 savings contracts; starting from v2, savings contracts
  are ERC20-compatible tokens.
  """
  token: Token
}
type ExchangeRate {
  id: ID!
  """
  The exchange rate; this is used to derive the `totalSavings` on the Savings Contract;
  totalCredits * exchangeRate = totalSavings
  """
  rate: BigDecimal!
  """The timestamp at which the rate was created."""
  timestamp: Int!
  """The SavingsContract this ExchangeRate relates to."""
  savingsContract: SavingsContract!
  """The next exchange rate for the savings contract (by timestamp); used for calculating APY."""
  next: ExchangeRate
}
enum CreditBalance_orderBy {
  id
  account
  amount
  savingsContract
}
input CreditBalance_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_not_contains: String
  account_starts_with: String
  account_not_starts_with: String
  account_ends_with: String
  account_not_ends_with: String
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
  savingsContract: String
  savingsContract_not: String
  savingsContract_gt: String
  savingsContract_lt: String
  savingsContract_gte: String
  savingsContract_lte: String
  savingsContract_in: [String!]
  savingsContract_not_in: [String!]
  savingsContract_contains: String
  savingsContract_not_contains: String
  savingsContract_starts_with: String
  savingsContract_not_starts_with: String
  savingsContract_ends_with: String
  savingsContract_not_ends_with: String
}
"""
A credit balance for a given savings contract (Save v1 only)
@deprecated
"""
type CreditBalance {
  id: ID!
  """Account"""
  account: Account!
  """Amount as an exact value"""
  amount: BigInt!
  """Savings contract"""
  savingsContract: SavingsContract!
}
"""
An Ethereum account that has interacted with Save v1
@deprecated
"""
type Account {
  """Address of the account"""
  id: ID!
  """Credit balance of the account (Save v1 only)"""
  creditBalance: CreditBalance
}
enum ExchangeRate_orderBy {
  id
  rate
  timestamp
  savingsContract
  next
}
input ExchangeRate_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  rate: BigDecimal
  rate_not: BigDecimal
  rate_gt: BigDecimal
  rate_lt: BigDecimal
  rate_gte: BigDecimal
  rate_lte: BigDecimal
  rate_in: [BigDecimal!]
  rate_not_in: [BigDecimal!]
  timestamp: Int
  timestamp_not: Int
  timestamp_gt: Int
  timestamp_lt: Int
  timestamp_gte: Int
  timestamp_lte: Int
  timestamp_in: [Int!]
  timestamp_not_in: [Int!]
  savingsContract: String
  savingsContract_not: String
  savingsContract_gt: String
  savingsContract_lt: String
  savingsContract_gte: String
  savingsContract_lte: String
  savingsContract_in: [String!]
  savingsContract_not_in: [String!]
  savingsContract_contains: String
  savingsContract_not_contains: String
  savingsContract_starts_with: String
  savingsContract_not_starts_with: String
  savingsContract_ends_with: String
  savingsContract_not_ends_with: String
  next: String
  next_not: String
  next_gt: String
  next_lt: String
  next_gte: String
  next_lte: String
  next_in: [String!]
  next_not_in: [String!]
  next_contains: String
  next_not_contains: String
  next_starts_with: String
  next_not_starts_with: String
  next_ends_with: String
  next_not_ends_with: String
}
enum SavingsContractDepositTransaction_orderBy {
  id
  hash
  block
  sender
  timestamp
  savingsContract
  amount
}
input SavingsContractDepositTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  savingsContract: String
  savingsContract_not: String
  savingsContract_gt: String
  savingsContract_lt: String
  savingsContract_gte: String
  savingsContract_lte: String
  savingsContract_in: [String!]
  savingsContract_not_in: [String!]
  savingsContract_contains: String
  savingsContract_not_contains: String
  savingsContract_starts_with: String
  savingsContract_not_starts_with: String
  savingsContract_ends_with: String
  savingsContract_not_ends_with: String
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
}
type SavingsContractDepositTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  timestamp: BigInt!
  """The SavingsContract the transaction relates to."""
  savingsContract: SavingsContract!
  """The amount deposited."""
  amount: BigInt!
}
interface Transaction {
  """Transaction hash + log index"""
  id: ID!
  """Transaction hash"""
  hash: Bytes!
  """Block number the transaction is in"""
  block: Int!
  """Timestamp of the block the transaction is in"""
  timestamp: BigInt!
  """Address of the sender of the transaction"""
  sender: Bytes!
}
enum SavingsContractWithdrawTransaction_orderBy {
  id
  hash
  block
  sender
  timestamp
  savingsContract
  amount
}
input SavingsContractWithdrawTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  savingsContract: String
  savingsContract_not: String
  savingsContract_gt: String
  savingsContract_lt: String
  savingsContract_gte: String
  savingsContract_lte: String
  savingsContract_in: [String!]
  savingsContract_not_in: [String!]
  savingsContract_contains: String
  savingsContract_not_contains: String
  savingsContract_starts_with: String
  savingsContract_not_starts_with: String
  savingsContract_ends_with: String
  savingsContract_not_ends_with: String
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
}
type SavingsContractWithdrawTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  timestamp: BigInt!
  """The SavingsContract the transaction relates to."""
  savingsContract: SavingsContract!
  """The amount withdrawn."""
  amount: BigInt!
}
enum SwapTransaction_orderBy {
  id
  hash
  block
  sender
  timestamp
  masset
  massetUnits
  inputBasset
  outputBasset
  recipient
}
input SwapTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  masset: String
  masset_not: String
  masset_gt: String
  masset_lt: String
  masset_gte: String
  masset_lte: String
  masset_in: [String!]
  masset_not_in: [String!]
  masset_contains: String
  masset_not_contains: String
  masset_starts_with: String
  masset_not_starts_with: String
  masset_ends_with: String
  masset_not_ends_with: String
  massetUnits: BigInt
  massetUnits_not: BigInt
  massetUnits_gt: BigInt
  massetUnits_lt: BigInt
  massetUnits_gte: BigInt
  massetUnits_lte: BigInt
  massetUnits_in: [BigInt!]
  massetUnits_not_in: [BigInt!]
  inputBasset: String
  inputBasset_not: String
  inputBasset_gt: String
  inputBasset_lt: String
  inputBasset_gte: String
  inputBasset_lte: String
  inputBasset_in: [String!]
  inputBasset_not_in: [String!]
  inputBasset_contains: String
  inputBasset_not_contains: String
  inputBasset_starts_with: String
  inputBasset_not_starts_with: String
  inputBasset_ends_with: String
  inputBasset_not_ends_with: String
  outputBasset: String
  outputBasset_not: String
  outputBasset_gt: String
  outputBasset_lt: String
  outputBasset_gte: String
  outputBasset_lte: String
  outputBasset_in: [String!]
  outputBasset_not_in: [String!]
  outputBasset_contains: String
  outputBasset_not_contains: String
  outputBasset_starts_with: String
  outputBasset_not_starts_with: String
  outputBasset_ends_with: String
  outputBasset_not_ends_with: String
  recipient: Bytes
  recipient_not: Bytes
  recipient_in: [Bytes!]
  recipient_not_in: [Bytes!]
  recipient_contains: Bytes
  recipient_not_contains: Bytes
}
type SwapTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  timestamp: BigInt!
  """The Masset the transaction relates to."""
  masset: Masset!
  """The amount of the swap output in Masset units"""
  massetUnits: BigInt!
  """The Basset used as the input for this swap."""
  inputBasset: Basset!
  """The Basset used as the output for this swap."""
  outputBasset: Basset!
  """The recipient of the swap output."""
  recipient: Bytes!
}
enum PaidFeeTransaction_orderBy {
  id
  hash
  block
  sender
  timestamp
  masset
  massetUnits
  basset
  bassetUnits
}
input PaidFeeTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  masset: String
  masset_not: String
  masset_gt: String
  masset_lt: String
  masset_gte: String
  masset_lte: String
  masset_in: [String!]
  masset_not_in: [String!]
  masset_contains: String
  masset_not_contains: String
  masset_starts_with: String
  masset_not_starts_with: String
  masset_ends_with: String
  masset_not_ends_with: String
  massetUnits: BigInt
  massetUnits_not: BigInt
  massetUnits_gt: BigInt
  massetUnits_lt: BigInt
  massetUnits_gte: BigInt
  massetUnits_lte: BigInt
  massetUnits_in: [BigInt!]
  massetUnits_not_in: [BigInt!]
  basset: String
  basset_not: String
  basset_gt: String
  basset_lt: String
  basset_gte: String
  basset_lte: String
  basset_in: [String!]
  basset_not_in: [String!]
  basset_contains: String
  basset_not_contains: String
  basset_starts_with: String
  basset_not_starts_with: String
  basset_ends_with: String
  basset_not_ends_with: String
  bassetUnits: BigInt
  bassetUnits_not: BigInt
  bassetUnits_gt: BigInt
  bassetUnits_lt: BigInt
  bassetUnits_gte: BigInt
  bassetUnits_lte: BigInt
  bassetUnits_in: [BigInt!]
  bassetUnits_not_in: [BigInt!]
}
type PaidFeeTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  timestamp: BigInt!
  """The Masset the transaction relates to."""
  masset: Masset!
  """The amount of the fee that was paid, in Masset units."""
  massetUnits: BigInt!
  """The Basset the fee was paid in."""
  basset: Basset!
  """The amount of the fee that was paid, in Basset units."""
  bassetUnits: BigInt!
}
enum RedeemMassetTransaction_orderBy {
  id
  hash
  block
  sender
  recipient
  timestamp
  masset
  massetUnits
}
input RedeemMassetTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  recipient: Bytes
  recipient_not: Bytes
  recipient_in: [Bytes!]
  recipient_not_in: [Bytes!]
  recipient_contains: Bytes
  recipient_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  masset: String
  masset_not: String
  masset_gt: String
  masset_lt: String
  masset_gte: String
  masset_lte: String
  masset_in: [String!]
  masset_not_in: [String!]
  masset_contains: String
  masset_not_contains: String
  masset_starts_with: String
  masset_not_starts_with: String
  masset_ends_with: String
  masset_not_ends_with: String
  massetUnits: BigInt
  massetUnits_not: BigInt
  massetUnits_gt: BigInt
  massetUnits_lt: BigInt
  massetUnits_gte: BigInt
  massetUnits_lte: BigInt
  massetUnits_in: [BigInt!]
  massetUnits_not_in: [BigInt!]
}
type RedeemMassetTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  recipient: Bytes!
  timestamp: BigInt!
  """The Masset the transaction relates to."""
  masset: Masset!
  """The amount redeemed in Masset units."""
  massetUnits: BigInt!
}
enum MintMultiTransaction_orderBy {
  id
  hash
  block
  sender
  recipient
  timestamp
  masset
  massetUnits
  bassets
  bassetsUnits
}
input MintMultiTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  recipient: Bytes
  recipient_not: Bytes
  recipient_in: [Bytes!]
  recipient_not_in: [Bytes!]
  recipient_contains: Bytes
  recipient_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  masset: String
  masset_not: String
  masset_gt: String
  masset_lt: String
  masset_gte: String
  masset_lte: String
  masset_in: [String!]
  masset_not_in: [String!]
  masset_contains: String
  masset_not_contains: String
  masset_starts_with: String
  masset_not_starts_with: String
  masset_ends_with: String
  masset_not_ends_with: String
  massetUnits: BigInt
  massetUnits_not: BigInt
  massetUnits_gt: BigInt
  massetUnits_lt: BigInt
  massetUnits_gte: BigInt
  massetUnits_lte: BigInt
  massetUnits_in: [BigInt!]
  massetUnits_not_in: [BigInt!]
  bassets: [String!]
  bassets_not: [String!]
  bassets_contains: [String!]
  bassets_not_contains: [String!]
  bassetsUnits: [BigInt!]
  bassetsUnits_not: [BigInt!]
  bassetsUnits_contains: [BigInt!]
  bassetsUnits_not_contains: [BigInt!]
}
type MintMultiTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  recipient: Bytes!
  timestamp: BigInt!
  """The Masset the transaction relates to."""
  masset: Masset!
  """The amount of the Masset minted, in Masset units."""
  massetUnits: BigInt!
  """The Bassets used as collateral assets for this mint."""
  bassets(skip: Int = 0, first: Int = 100, orderBy: Basset_orderBy, orderDirection: OrderDirection, where: Basset_filter): [Basset!]!
  """The respective Basset units for each Basset used in this mint."""
  bassetsUnits: [BigInt!]!
}
enum MintSingleTransaction_orderBy {
  id
  hash
  block
  sender
  recipient
  timestamp
  masset
  massetUnits
  basset
  bassetUnits
}
input MintSingleTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  recipient: Bytes
  recipient_not: Bytes
  recipient_in: [Bytes!]
  recipient_not_in: [Bytes!]
  recipient_contains: Bytes
  recipient_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  masset: String
  masset_not: String
  masset_gt: String
  masset_lt: String
  masset_gte: String
  masset_lte: String
  masset_in: [String!]
  masset_not_in: [String!]
  masset_contains: String
  masset_not_contains: String
  masset_starts_with: String
  masset_not_starts_with: String
  masset_ends_with: String
  masset_not_ends_with: String
  massetUnits: BigInt
  massetUnits_not: BigInt
  massetUnits_gt: BigInt
  massetUnits_lt: BigInt
  massetUnits_gte: BigInt
  massetUnits_lte: BigInt
  massetUnits_in: [BigInt!]
  massetUnits_not_in: [BigInt!]
  basset: String
  basset_not: String
  basset_gt: String
  basset_lt: String
  basset_gte: String
  basset_lte: String
  basset_in: [String!]
  basset_not_in: [String!]
  basset_contains: String
  basset_not_contains: String
  basset_starts_with: String
  basset_not_starts_with: String
  basset_ends_with: String
  basset_not_ends_with: String
  bassetUnits: BigInt
  bassetUnits_not: BigInt
  bassetUnits_gt: BigInt
  bassetUnits_lt: BigInt
  bassetUnits_gte: BigInt
  bassetUnits_lte: BigInt
  bassetUnits_in: [BigInt!]
  bassetUnits_not_in: [BigInt!]
}
type MintSingleTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  recipient: Bytes!
  timestamp: BigInt!
  """The Masset the transaction relates to."""
  masset: Masset!
  """The amount of the Masset minted, in Masset units."""
  massetUnits: BigInt!
  """The Basset used as the collateral asset for this mint."""
  basset: Basset!
  """The amount of the Basset used for this mint, in Basset units."""
  bassetUnits: BigInt!
}
enum RedeemTransaction_orderBy {
  id
  hash
  block
  sender
  recipient
  timestamp
  masset
  massetUnits
  bassets
  bassetsUnits
}
input RedeemTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  recipient: Bytes
  recipient_not: Bytes
  recipient_in: [Bytes!]
  recipient_not_in: [Bytes!]
  recipient_contains: Bytes
  recipient_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  masset: String
  masset_not: String
  masset_gt: String
  masset_lt: String
  masset_gte: String
  masset_lte: String
  masset_in: [String!]
  masset_not_in: [String!]
  masset_contains: String
  masset_not_contains: String
  masset_starts_with: String
  masset_not_starts_with: String
  masset_ends_with: String
  masset_not_ends_with: String
  massetUnits: BigInt
  massetUnits_not: BigInt
  massetUnits_gt: BigInt
  massetUnits_lt: BigInt
  massetUnits_gte: BigInt
  massetUnits_lte: BigInt
  massetUnits_in: [BigInt!]
  massetUnits_not_in: [BigInt!]
  bassets: [String!]
  bassets_not: [String!]
  bassets_contains: [String!]
  bassets_not_contains: [String!]
  bassetsUnits: [BigInt!]
  bassetsUnits_not: [BigInt!]
  bassetsUnits_contains: [BigInt!]
  bassetsUnits_not_contains: [BigInt!]
}
type RedeemTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  recipient: Bytes!
  timestamp: BigInt!
  """The Masset the transaction relates to."""
  masset: Masset!
  """The amount redeemed in Masset units."""
  massetUnits: BigInt!
  """The Bassets selected as assets to redeem."""
  bassets(skip: Int = 0, first: Int = 100, orderBy: Basset_orderBy, orderDirection: OrderDirection, where: Basset_filter): [Basset!]!
  """The respective units of each Basset selected to redeem."""
  bassetsUnits: [BigInt!]!
}
enum Basket_orderBy {
  id
  bassets
  collateralisationRatio
  maxBassets
  undergoingRecol
  failed
  masset
}
input Basket_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  bassets: [String!]
  bassets_not: [String!]
  bassets_contains: [String!]
  bassets_not_contains: [String!]
  collateralisationRatio: BigInt
  collateralisationRatio_not: BigInt
  collateralisationRatio_gt: BigInt
  collateralisationRatio_lt: BigInt
  collateralisationRatio_gte: BigInt
  collateralisationRatio_lte: BigInt
  collateralisationRatio_in: [BigInt!]
  collateralisationRatio_not_in: [BigInt!]
  maxBassets: Int
  maxBassets_not: Int
  maxBassets_gt: Int
  maxBassets_lt: Int
  maxBassets_gte: Int
  maxBassets_lte: Int
  maxBassets_in: [Int!]
  maxBassets_not_in: [Int!]
  undergoingRecol: Boolean
  undergoingRecol_not: Boolean
  undergoingRecol_in: [Boolean!]
  undergoingRecol_not_in: [Boolean!]
  failed: Boolean
  failed_not: Boolean
  failed_in: [Boolean!]
  failed_not_in: [Boolean!]
}
enum Masset_orderBy {
  id
  basket
  basketManager
  feeRate
  redemptionFeeRate
  totalMints
  totalSwaps
  totalRedemptions
  totalRedeemMassets
  totalSupply
  cumulativeMinted
  cumulativeSwapped
  cumulativeRedeemed
  cumulativeRedeemedMasset
  cumulativeFeesPaid
  token
  savingsContracts
  swapTransactions
  paidFeeTransactions
  redeemMassetTransactions
  mintMultiTransactions
  mintSingleTransactions
  redeemTransactions
}
input Masset_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  basket: String
  basket_not: String
  basket_gt: String
  basket_lt: String
  basket_gte: String
  basket_lte: String
  basket_in: [String!]
  basket_not_in: [String!]
  basket_contains: String
  basket_not_contains: String
  basket_starts_with: String
  basket_not_starts_with: String
  basket_ends_with: String
  basket_not_ends_with: String
  basketManager: Bytes
  basketManager_not: Bytes
  basketManager_in: [Bytes!]
  basketManager_not_in: [Bytes!]
  basketManager_contains: Bytes
  basketManager_not_contains: Bytes
  feeRate: BigInt
  feeRate_not: BigInt
  feeRate_gt: BigInt
  feeRate_lt: BigInt
  feeRate_gte: BigInt
  feeRate_lte: BigInt
  feeRate_in: [BigInt!]
  feeRate_not_in: [BigInt!]
  redemptionFeeRate: BigInt
  redemptionFeeRate_not: BigInt
  redemptionFeeRate_gt: BigInt
  redemptionFeeRate_lt: BigInt
  redemptionFeeRate_gte: BigInt
  redemptionFeeRate_lte: BigInt
  redemptionFeeRate_in: [BigInt!]
  redemptionFeeRate_not_in: [BigInt!]
  totalMints: String
  totalMints_not: String
  totalMints_gt: String
  totalMints_lt: String
  totalMints_gte: String
  totalMints_lte: String
  totalMints_in: [String!]
  totalMints_not_in: [String!]
  totalMints_contains: String
  totalMints_not_contains: String
  totalMints_starts_with: String
  totalMints_not_starts_with: String
  totalMints_ends_with: String
  totalMints_not_ends_with: String
  totalSwaps: String
  totalSwaps_not: String
  totalSwaps_gt: String
  totalSwaps_lt: String
  totalSwaps_gte: String
  totalSwaps_lte: String
  totalSwaps_in: [String!]
  totalSwaps_not_in: [String!]
  totalSwaps_contains: String
  totalSwaps_not_contains: String
  totalSwaps_starts_with: String
  totalSwaps_not_starts_with: String
  totalSwaps_ends_with: String
  totalSwaps_not_ends_with: String
  totalRedemptions: String
  totalRedemptions_not: String
  totalRedemptions_gt: String
  totalRedemptions_lt: String
  totalRedemptions_gte: String
  totalRedemptions_lte: String
  totalRedemptions_in: [String!]
  totalRedemptions_not_in: [String!]
  totalRedemptions_contains: String
  totalRedemptions_not_contains: String
  totalRedemptions_starts_with: String
  totalRedemptions_not_starts_with: String
  totalRedemptions_ends_with: String
  totalRedemptions_not_ends_with: String
  totalRedeemMassets: String
  totalRedeemMassets_not: String
  totalRedeemMassets_gt: String
  totalRedeemMassets_lt: String
  totalRedeemMassets_gte: String
  totalRedeemMassets_lte: String
  totalRedeemMassets_in: [String!]
  totalRedeemMassets_not_in: [String!]
  totalRedeemMassets_contains: String
  totalRedeemMassets_not_contains: String
  totalRedeemMassets_starts_with: String
  totalRedeemMassets_not_starts_with: String
  totalRedeemMassets_ends_with: String
  totalRedeemMassets_not_ends_with: String
  totalSupply: String
  totalSupply_not: String
  totalSupply_gt: String
  totalSupply_lt: String
  totalSupply_gte: String
  totalSupply_lte: String
  totalSupply_in: [String!]
  totalSupply_not_in: [String!]
  totalSupply_contains: String
  totalSupply_not_contains: String
  totalSupply_starts_with: String
  totalSupply_not_starts_with: String
  totalSupply_ends_with: String
  totalSupply_not_ends_with: String
  cumulativeMinted: String
  cumulativeMinted_not: String
  cumulativeMinted_gt: String
  cumulativeMinted_lt: String
  cumulativeMinted_gte: String
  cumulativeMinted_lte: String
  cumulativeMinted_in: [String!]
  cumulativeMinted_not_in: [String!]
  cumulativeMinted_contains: String
  cumulativeMinted_not_contains: String
  cumulativeMinted_starts_with: String
  cumulativeMinted_not_starts_with: String
  cumulativeMinted_ends_with: String
  cumulativeMinted_not_ends_with: String
  cumulativeSwapped: String
  cumulativeSwapped_not: String
  cumulativeSwapped_gt: String
  cumulativeSwapped_lt: String
  cumulativeSwapped_gte: String
  cumulativeSwapped_lte: String
  cumulativeSwapped_in: [String!]
  cumulativeSwapped_not_in: [String!]
  cumulativeSwapped_contains: String
  cumulativeSwapped_not_contains: String
  cumulativeSwapped_starts_with: String
  cumulativeSwapped_not_starts_with: String
  cumulativeSwapped_ends_with: String
  cumulativeSwapped_not_ends_with: String
  cumulativeRedeemed: String
  cumulativeRedeemed_not: String
  cumulativeRedeemed_gt: String
  cumulativeRedeemed_lt: String
  cumulativeRedeemed_gte: String
  cumulativeRedeemed_lte: String
  cumulativeRedeemed_in: [String!]
  cumulativeRedeemed_not_in: [String!]
  cumulativeRedeemed_contains: String
  cumulativeRedeemed_not_contains: String
  cumulativeRedeemed_starts_with: String
  cumulativeRedeemed_not_starts_with: String
  cumulativeRedeemed_ends_with: String
  cumulativeRedeemed_not_ends_with: String
  cumulativeRedeemedMasset: String
  cumulativeRedeemedMasset_not: String
  cumulativeRedeemedMasset_gt: String
  cumulativeRedeemedMasset_lt: String
  cumulativeRedeemedMasset_gte: String
  cumulativeRedeemedMasset_lte: String
  cumulativeRedeemedMasset_in: [String!]
  cumulativeRedeemedMasset_not_in: [String!]
  cumulativeRedeemedMasset_contains: String
  cumulativeRedeemedMasset_not_contains: String
  cumulativeRedeemedMasset_starts_with: String
  cumulativeRedeemedMasset_not_starts_with: String
  cumulativeRedeemedMasset_ends_with: String
  cumulativeRedeemedMasset_not_ends_with: String
  cumulativeFeesPaid: String
  cumulativeFeesPaid_not: String
  cumulativeFeesPaid_gt: String
  cumulativeFeesPaid_lt: String
  cumulativeFeesPaid_gte: String
  cumulativeFeesPaid_lte: String
  cumulativeFeesPaid_in: [String!]
  cumulativeFeesPaid_not_in: [String!]
  cumulativeFeesPaid_contains: String
  cumulativeFeesPaid_not_contains: String
  cumulativeFeesPaid_starts_with: String
  cumulativeFeesPaid_not_starts_with: String
  cumulativeFeesPaid_ends_with: String
  cumulativeFeesPaid_not_ends_with: String
  token: String
  token_not: String
  token_gt: String
  token_lt: String
  token_gte: String
  token_lte: String
  token_in: [String!]
  token_not_in: [String!]
  token_contains: String
  token_not_contains: String
  token_starts_with: String
  token_not_starts_with: String
  token_ends_with: String
  token_not_ends_with: String
}
enum Account_orderBy {
  id
  creditBalance
}
input Account_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  creditBalance: String
  creditBalance_not: String
  creditBalance_gt: String
  creditBalance_lt: String
  creditBalance_gte: String
  creditBalance_lte: String
  creditBalance_in: [String!]
  creditBalance_not_in: [String!]
  creditBalance_contains: String
  creditBalance_not_contains: String
  creditBalance_starts_with: String
  creditBalance_not_starts_with: String
  creditBalance_ends_with: String
  creditBalance_not_ends_with: String
}
enum Transaction_orderBy {
  id
  hash
  block
  timestamp
  sender
}
input Transaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
}
"""The type for the top-level _meta field"""
type _Meta_ {
  """
  Information about a specific subgraph block. The hash of the block
  will be null if the _meta field has a block constraint that asks for
  a block number. It will be filled if the _meta field has no block constraint
  and therefore asks for the latest  block
  """
  block: _Block_!
  """The deployment ID"""
  deployment: String!
  """If `true`, the subgraph encountered indexing errors at some past block"""
  hasIndexingErrors: Boolean!
}
type _Block_ {
  """The hash of the block"""
  hash: Bytes
  """The block number"""
  number: Int!
}
type Subscription {
  token(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Token
  tokens(
    skip: Int = 0
    first: Int = 100
    orderBy: Token_orderBy
    orderDirection: OrderDirection
    where: Token_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Token!]!
  metric(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Metric
  metrics(
    skip: Int = 0
    first: Int = 100
    orderBy: Metric_orderBy
    orderDirection: OrderDirection
    where: Metric_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Metric!]!
  counter(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Counter
  counters(
    skip: Int = 0
    first: Int = 100
    orderBy: Counter_orderBy
    orderDirection: OrderDirection
    where: Counter_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Counter!]!
  basset(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Basset
  bassets(
    skip: Int = 0
    first: Int = 100
    orderBy: Basset_orderBy
    orderDirection: OrderDirection
    where: Basset_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Basset!]!
  basket(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Basket
  baskets(
    skip: Int = 0
    first: Int = 100
    orderBy: Basket_orderBy
    orderDirection: OrderDirection
    where: Basket_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Basket!]!
  masset(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Masset
  massets(
    skip: Int = 0
    first: Int = 100
    orderBy: Masset_orderBy
    orderDirection: OrderDirection
    where: Masset_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Masset!]!
  account(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Account
  accounts(
    skip: Int = 0
    first: Int = 100
    orderBy: Account_orderBy
    orderDirection: OrderDirection
    where: Account_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Account!]!
  creditBalance(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): CreditBalance
  creditBalances(
    skip: Int = 0
    first: Int = 100
    orderBy: CreditBalance_orderBy
    orderDirection: OrderDirection
    where: CreditBalance_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [CreditBalance!]!
  savingsContract(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): SavingsContract
  savingsContracts(
    skip: Int = 0
    first: Int = 100
    orderBy: SavingsContract_orderBy
    orderDirection: OrderDirection
    where: SavingsContract_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [SavingsContract!]!
  exchangeRate(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): ExchangeRate
  exchangeRates(
    skip: Int = 0
    first: Int = 100
    orderBy: ExchangeRate_orderBy
    orderDirection: OrderDirection
    where: ExchangeRate_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [ExchangeRate!]!
  swapTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): SwapTransaction
  swapTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: SwapTransaction_orderBy
    orderDirection: OrderDirection
    where: SwapTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [SwapTransaction!]!
  paidFeeTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): PaidFeeTransaction
  paidFeeTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: PaidFeeTransaction_orderBy
    orderDirection: OrderDirection
    where: PaidFeeTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [PaidFeeTransaction!]!
  mintSingleTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): MintSingleTransaction
  mintSingleTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: MintSingleTransaction_orderBy
    orderDirection: OrderDirection
    where: MintSingleTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [MintSingleTransaction!]!
  mintMultiTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): MintMultiTransaction
  mintMultiTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: MintMultiTransaction_orderBy
    orderDirection: OrderDirection
    where: MintMultiTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [MintMultiTransaction!]!
  redeemTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): RedeemTransaction
  redeemTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: RedeemTransaction_orderBy
    orderDirection: OrderDirection
    where: RedeemTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [RedeemTransaction!]!
  redeemMassetTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): RedeemMassetTransaction
  redeemMassetTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: RedeemMassetTransaction_orderBy
    orderDirection: OrderDirection
    where: RedeemMassetTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [RedeemMassetTransaction!]!
  savingsContractDepositTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): SavingsContractDepositTransaction
  savingsContractDepositTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: SavingsContractDepositTransaction_orderBy
    orderDirection: OrderDirection
    where: SavingsContractDepositTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [SavingsContractDepositTransaction!]!
  savingsContractWithdrawTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): SavingsContractWithdrawTransaction
  savingsContractWithdrawTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: SavingsContractWithdrawTransaction_orderBy
    orderDirection: OrderDirection
    where: SavingsContractWithdrawTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [SavingsContractWithdrawTransaction!]!
  transaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Transaction
  transactions(
    skip: Int = 0
    first: Int = 100
    orderBy: Transaction_orderBy
    orderDirection: OrderDirection
    where: Transaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Transaction!]!
  """Access to subgraph metadata"""
  _meta(block: Block_height): _Meta_
}
enum _SubgraphErrorPolicy_ {
  """Data will be returned even if the subgraph has indexing errors"""
  allow
  """If the subgraph has indexing errors, data will be omitted. The default."""
  deny
}