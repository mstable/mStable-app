schema {
  query: Query
  subscription: Subscription
}
type Query {
  token(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Token
  tokens(
    skip: Int = 0
    first: Int = 100
    orderBy: Token_orderBy
    orderDirection: OrderDirection
    where: Token_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Token!]!
  metric(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Metric
  metrics(
    skip: Int = 0
    first: Int = 100
    orderBy: Metric_orderBy
    orderDirection: OrderDirection
    where: Metric_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Metric!]!
  counter(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Counter
  counters(
    skip: Int = 0
    first: Int = 100
    orderBy: Counter_orderBy
    orderDirection: OrderDirection
    where: Counter_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Counter!]!
  basset(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Basset
  bassets(
    skip: Int = 0
    first: Int = 100
    orderBy: Basset_orderBy
    orderDirection: OrderDirection
    where: Basset_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Basset!]!
  basket(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Basket
  baskets(
    skip: Int = 0
    first: Int = 100
    orderBy: Basket_orderBy
    orderDirection: OrderDirection
    where: Basket_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Basket!]!
  ampData(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): AmpData
  ampDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: AmpData_orderBy
    orderDirection: OrderDirection
    where: AmpData_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [AmpData!]!
  boostedSavingsVault(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostedSavingsVault
  boostedSavingsVaults(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostedSavingsVault_orderBy
    orderDirection: OrderDirection
    where: BoostedSavingsVault_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostedSavingsVault!]!
  account(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Account
  accounts(
    skip: Int = 0
    first: Int = 100
    orderBy: Account_orderBy
    orderDirection: OrderDirection
    where: Account_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Account!]!
  boostedSavingsVaultAccount(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostedSavingsVaultAccount
  boostedSavingsVaultAccounts(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostedSavingsVaultAccount_orderBy
    orderDirection: OrderDirection
    where: BoostedSavingsVaultAccount_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostedSavingsVaultAccount!]!
  boostedSavingsVaultRewardEntry(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostedSavingsVaultRewardEntry
  boostedSavingsVaultRewardEntries(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostedSavingsVaultRewardEntry_orderBy
    orderDirection: OrderDirection
    where: BoostedSavingsVaultRewardEntry_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostedSavingsVaultRewardEntry!]!
  boostedSavingsVaultStakeTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostedSavingsVaultStakeTransaction
  boostedSavingsVaultStakeTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostedSavingsVaultStakeTransaction_orderBy
    orderDirection: OrderDirection
    where: BoostedSavingsVaultStakeTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostedSavingsVaultStakeTransaction!]!
  boostedSavingsVaultRewardAddedTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostedSavingsVaultRewardAddedTransaction
  boostedSavingsVaultRewardAddedTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostedSavingsVaultRewardAddedTransaction_orderBy
    orderDirection: OrderDirection
    where: BoostedSavingsVaultRewardAddedTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostedSavingsVaultRewardAddedTransaction!]!
  boostedSavingsVaultRewardPaidTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostedSavingsVaultRewardPaidTransaction
  boostedSavingsVaultRewardPaidTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostedSavingsVaultRewardPaidTransaction_orderBy
    orderDirection: OrderDirection
    where: BoostedSavingsVaultRewardPaidTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostedSavingsVaultRewardPaidTransaction!]!
  boostedSavingsVaultWithdrawTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostedSavingsVaultWithdrawTransaction
  boostedSavingsVaultWithdrawTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostedSavingsVaultWithdrawTransaction_orderBy
    orderDirection: OrderDirection
    where: BoostedSavingsVaultWithdrawTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostedSavingsVaultWithdrawTransaction!]!
  feederPool(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): FeederPool
  feederPools(
    skip: Int = 0
    first: Int = 100
    orderBy: FeederPool_orderBy
    orderDirection: OrderDirection
    where: FeederPool_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [FeederPool!]!
  feederPoolAccount(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): FeederPoolAccount
  feederPoolAccounts(
    skip: Int = 0
    first: Int = 100
    orderBy: FeederPoolAccount_orderBy
    orderDirection: OrderDirection
    where: FeederPoolAccount_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [FeederPoolAccount!]!
  fpswapTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): FPSwapTransaction
  fpswapTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: FPSwapTransaction_orderBy
    orderDirection: OrderDirection
    where: FPSwapTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [FPSwapTransaction!]!
  fpmintSingleTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): FPMintSingleTransaction
  fpmintSingleTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: FPMintSingleTransaction_orderBy
    orderDirection: OrderDirection
    where: FPMintSingleTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [FPMintSingleTransaction!]!
  fpmintMultiTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): FPMintMultiTransaction
  fpmintMultiTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: FPMintMultiTransaction_orderBy
    orderDirection: OrderDirection
    where: FPMintMultiTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [FPMintMultiTransaction!]!
  fpredeemTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): FPRedeemTransaction
  fpredeemTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: FPRedeemTransaction_orderBy
    orderDirection: OrderDirection
    where: FPRedeemTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [FPRedeemTransaction!]!
  boostDirector(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostDirector
  boostDirectors(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostDirector_orderBy
    orderDirection: OrderDirection
    where: BoostDirector_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostDirector!]!
  transaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Transaction
  transactions(
    skip: Int = 0
    first: Int = 100
    orderBy: Transaction_orderBy
    orderDirection: OrderDirection
    where: Transaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Transaction!]!
  """Access to subgraph metadata"""
  _meta(block: Block_height): _Meta_
}
input Block_height {
  hash: Bytes
  number: Int
}
scalar Bytes
"""An ERC20-compatible token"""
type Token {
  id: ID!
  """Token address"""
  address: Bytes!
  """Token decimals"""
  decimals: Int!
  """Token name"""
  name: String!
  """Token symbol"""
  symbol: String!
  """Total supply of the token"""
  totalSupply: Metric!
  """Total quantity of tokens burned"""
  totalBurned: Metric!
  """Total quantity of tokens minted"""
  totalMinted: Metric!
  """Count of transfer transactions"""
  totalTransfers: Counter!
  """Count of transfer transactions that minted the token"""
  totalMints: Counter!
  """Count of transfer transactions that burned the token"""
  totalBurns: Counter!
}
type Metric {
  id: ID!
  """Exact value of the metric, i.e. in base units as an integer"""
  exact: BigInt!
  """Decimals used for the exact value (default: 18)"""
  decimals: Int!
  """Simple value of the metric, i.e. the exact value represented as a decimal"""
  simple: BigDecimal!
}
scalar BigInt
scalar BigDecimal
type Counter {
  id: ID!
  """Value of the counter; should be positive"""
  value: BigInt!
}
enum Token_orderBy {
  id
  address
  decimals
  name
  symbol
  totalSupply
  totalBurned
  totalMinted
  totalTransfers
  totalMints
  totalBurns
}
enum OrderDirection {
  asc
  desc
}
input Token_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  address: Bytes
  address_not: Bytes
  address_in: [Bytes!]
  address_not_in: [Bytes!]
  address_contains: Bytes
  address_not_contains: Bytes
  decimals: Int
  decimals_not: Int
  decimals_gt: Int
  decimals_lt: Int
  decimals_gte: Int
  decimals_lte: Int
  decimals_in: [Int!]
  decimals_not_in: [Int!]
  name: String
  name_not: String
  name_gt: String
  name_lt: String
  name_gte: String
  name_lte: String
  name_in: [String!]
  name_not_in: [String!]
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  symbol: String
  symbol_not: String
  symbol_gt: String
  symbol_lt: String
  symbol_gte: String
  symbol_lte: String
  symbol_in: [String!]
  symbol_not_in: [String!]
  symbol_contains: String
  symbol_not_contains: String
  symbol_starts_with: String
  symbol_not_starts_with: String
  symbol_ends_with: String
  symbol_not_ends_with: String
  totalSupply: String
  totalSupply_not: String
  totalSupply_gt: String
  totalSupply_lt: String
  totalSupply_gte: String
  totalSupply_lte: String
  totalSupply_in: [String!]
  totalSupply_not_in: [String!]
  totalSupply_contains: String
  totalSupply_not_contains: String
  totalSupply_starts_with: String
  totalSupply_not_starts_with: String
  totalSupply_ends_with: String
  totalSupply_not_ends_with: String
  totalBurned: String
  totalBurned_not: String
  totalBurned_gt: String
  totalBurned_lt: String
  totalBurned_gte: String
  totalBurned_lte: String
  totalBurned_in: [String!]
  totalBurned_not_in: [String!]
  totalBurned_contains: String
  totalBurned_not_contains: String
  totalBurned_starts_with: String
  totalBurned_not_starts_with: String
  totalBurned_ends_with: String
  totalBurned_not_ends_with: String
  totalMinted: String
  totalMinted_not: String
  totalMinted_gt: String
  totalMinted_lt: String
  totalMinted_gte: String
  totalMinted_lte: String
  totalMinted_in: [String!]
  totalMinted_not_in: [String!]
  totalMinted_contains: String
  totalMinted_not_contains: String
  totalMinted_starts_with: String
  totalMinted_not_starts_with: String
  totalMinted_ends_with: String
  totalMinted_not_ends_with: String
  totalTransfers: String
  totalTransfers_not: String
  totalTransfers_gt: String
  totalTransfers_lt: String
  totalTransfers_gte: String
  totalTransfers_lte: String
  totalTransfers_in: [String!]
  totalTransfers_not_in: [String!]
  totalTransfers_contains: String
  totalTransfers_not_contains: String
  totalTransfers_starts_with: String
  totalTransfers_not_starts_with: String
  totalTransfers_ends_with: String
  totalTransfers_not_ends_with: String
  totalMints: String
  totalMints_not: String
  totalMints_gt: String
  totalMints_lt: String
  totalMints_gte: String
  totalMints_lte: String
  totalMints_in: [String!]
  totalMints_not_in: [String!]
  totalMints_contains: String
  totalMints_not_contains: String
  totalMints_starts_with: String
  totalMints_not_starts_with: String
  totalMints_ends_with: String
  totalMints_not_ends_with: String
  totalBurns: String
  totalBurns_not: String
  totalBurns_gt: String
  totalBurns_lt: String
  totalBurns_gte: String
  totalBurns_lte: String
  totalBurns_in: [String!]
  totalBurns_not_in: [String!]
  totalBurns_contains: String
  totalBurns_not_contains: String
  totalBurns_starts_with: String
  totalBurns_not_starts_with: String
  totalBurns_ends_with: String
  totalBurns_not_ends_with: String
}
enum Metric_orderBy {
  id
  exact
  decimals
  simple
}
input Metric_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  exact: BigInt
  exact_not: BigInt
  exact_gt: BigInt
  exact_lt: BigInt
  exact_gte: BigInt
  exact_lte: BigInt
  exact_in: [BigInt!]
  exact_not_in: [BigInt!]
  decimals: Int
  decimals_not: Int
  decimals_gt: Int
  decimals_lt: Int
  decimals_gte: Int
  decimals_lte: Int
  decimals_in: [Int!]
  decimals_not_in: [Int!]
  simple: BigDecimal
  simple_not: BigDecimal
  simple_gt: BigDecimal
  simple_lt: BigDecimal
  simple_gte: BigDecimal
  simple_lte: BigDecimal
  simple_in: [BigDecimal!]
  simple_not_in: [BigDecimal!]
}
enum Counter_orderBy {
  id
  value
}
input Counter_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  value: BigInt
  value_not: BigInt
  value_gt: BigInt
  value_lt: BigInt
  value_gte: BigInt
  value_lte: BigInt
  value_in: [BigInt!]
  value_not_in: [BigInt!]
}
"""Basket Asset (e.g. DAI for the mUSD basket)"""
type Basset {
  """Address of the Basset token contract"""
  id: ID!
  """If a main pool asset, the Masset the Basset is associated with (optional)"""
  masset: Token
  """Target weight of the Basset (mUSD only)"""
  maxWeight: BigInt
  """Basset to Masset ratio for quantity conversion"""
  ratio: BigInt!
  """Flag that is set when the bAsset is removed from the basket (and unset when added)"""
  removed: Boolean!
  """Status of the Basset, e.g. 'Normal'"""
  status: String!
  """An ERC20 can charge transfer fee, e.g. USDT or DGX tokens"""
  isTransferFeeCharged: Boolean!
  """The underlying Token for the Basset"""
  token: Token!
  """Amount of the Basset that is held in collateral"""
  vaultBalance: Metric!
  """Total number of mint transactions in which the Basset was an input"""
  totalMints: Counter!
  """Total number of swap transactions in which the Basset was an input"""
  totalSwapsAsInput: Counter!
  """Total number of swap transactions in which the Basset was an output"""
  totalSwapsAsOutput: Counter!
  """Total number of redemption transactions in which the Basset was an output"""
  totalRedemptions: Counter!
  """Total supply of the Basset token"""
  totalSupply: Metric!
  """Cumulative amount of the Basset that was used in mint transactions as input"""
  cumulativeMinted: Metric!
  """Cumulative amount of the Basset that was used in swap transactions as output"""
  cumulativeSwappedAsOutput: Metric!
  """Cumulative amount of the Basset that was used in redemption transactions as output (excluding proportional redemption)"""
  cumulativeRedeemed: Metric!
  """Cumulative amount of fees paid (e.g. for swaps and redemptions) using this Basset"""
  cumulativeFeesPaid: Metric!
}
enum Basset_orderBy {
  id
  masset
  maxWeight
  ratio
  removed
  status
  isTransferFeeCharged
  token
  vaultBalance
  totalMints
  totalSwapsAsInput
  totalSwapsAsOutput
  totalRedemptions
  totalSupply
  cumulativeMinted
  cumulativeSwappedAsOutput
  cumulativeRedeemed
  cumulativeFeesPaid
}
input Basset_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  masset: String
  masset_not: String
  masset_gt: String
  masset_lt: String
  masset_gte: String
  masset_lte: String
  masset_in: [String!]
  masset_not_in: [String!]
  masset_contains: String
  masset_not_contains: String
  masset_starts_with: String
  masset_not_starts_with: String
  masset_ends_with: String
  masset_not_ends_with: String
  maxWeight: BigInt
  maxWeight_not: BigInt
  maxWeight_gt: BigInt
  maxWeight_lt: BigInt
  maxWeight_gte: BigInt
  maxWeight_lte: BigInt
  maxWeight_in: [BigInt!]
  maxWeight_not_in: [BigInt!]
  ratio: BigInt
  ratio_not: BigInt
  ratio_gt: BigInt
  ratio_lt: BigInt
  ratio_gte: BigInt
  ratio_lte: BigInt
  ratio_in: [BigInt!]
  ratio_not_in: [BigInt!]
  removed: Boolean
  removed_not: Boolean
  removed_in: [Boolean!]
  removed_not_in: [Boolean!]
  status: String
  status_not: String
  status_gt: String
  status_lt: String
  status_gte: String
  status_lte: String
  status_in: [String!]
  status_not_in: [String!]
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  isTransferFeeCharged: Boolean
  isTransferFeeCharged_not: Boolean
  isTransferFeeCharged_in: [Boolean!]
  isTransferFeeCharged_not_in: [Boolean!]
  token: String
  token_not: String
  token_gt: String
  token_lt: String
  token_gte: String
  token_lte: String
  token_in: [String!]
  token_not_in: [String!]
  token_contains: String
  token_not_contains: String
  token_starts_with: String
  token_not_starts_with: String
  token_ends_with: String
  token_not_ends_with: String
  vaultBalance: String
  vaultBalance_not: String
  vaultBalance_gt: String
  vaultBalance_lt: String
  vaultBalance_gte: String
  vaultBalance_lte: String
  vaultBalance_in: [String!]
  vaultBalance_not_in: [String!]
  vaultBalance_contains: String
  vaultBalance_not_contains: String
  vaultBalance_starts_with: String
  vaultBalance_not_starts_with: String
  vaultBalance_ends_with: String
  vaultBalance_not_ends_with: String
  totalMints: String
  totalMints_not: String
  totalMints_gt: String
  totalMints_lt: String
  totalMints_gte: String
  totalMints_lte: String
  totalMints_in: [String!]
  totalMints_not_in: [String!]
  totalMints_contains: String
  totalMints_not_contains: String
  totalMints_starts_with: String
  totalMints_not_starts_with: String
  totalMints_ends_with: String
  totalMints_not_ends_with: String
  totalSwapsAsInput: String
  totalSwapsAsInput_not: String
  totalSwapsAsInput_gt: String
  totalSwapsAsInput_lt: String
  totalSwapsAsInput_gte: String
  totalSwapsAsInput_lte: String
  totalSwapsAsInput_in: [String!]
  totalSwapsAsInput_not_in: [String!]
  totalSwapsAsInput_contains: String
  totalSwapsAsInput_not_contains: String
  totalSwapsAsInput_starts_with: String
  totalSwapsAsInput_not_starts_with: String
  totalSwapsAsInput_ends_with: String
  totalSwapsAsInput_not_ends_with: String
  totalSwapsAsOutput: String
  totalSwapsAsOutput_not: String
  totalSwapsAsOutput_gt: String
  totalSwapsAsOutput_lt: String
  totalSwapsAsOutput_gte: String
  totalSwapsAsOutput_lte: String
  totalSwapsAsOutput_in: [String!]
  totalSwapsAsOutput_not_in: [String!]
  totalSwapsAsOutput_contains: String
  totalSwapsAsOutput_not_contains: String
  totalSwapsAsOutput_starts_with: String
  totalSwapsAsOutput_not_starts_with: String
  totalSwapsAsOutput_ends_with: String
  totalSwapsAsOutput_not_ends_with: String
  totalRedemptions: String
  totalRedemptions_not: String
  totalRedemptions_gt: String
  totalRedemptions_lt: String
  totalRedemptions_gte: String
  totalRedemptions_lte: String
  totalRedemptions_in: [String!]
  totalRedemptions_not_in: [String!]
  totalRedemptions_contains: String
  totalRedemptions_not_contains: String
  totalRedemptions_starts_with: String
  totalRedemptions_not_starts_with: String
  totalRedemptions_ends_with: String
  totalRedemptions_not_ends_with: String
  totalSupply: String
  totalSupply_not: String
  totalSupply_gt: String
  totalSupply_lt: String
  totalSupply_gte: String
  totalSupply_lte: String
  totalSupply_in: [String!]
  totalSupply_not_in: [String!]
  totalSupply_contains: String
  totalSupply_not_contains: String
  totalSupply_starts_with: String
  totalSupply_not_starts_with: String
  totalSupply_ends_with: String
  totalSupply_not_ends_with: String
  cumulativeMinted: String
  cumulativeMinted_not: String
  cumulativeMinted_gt: String
  cumulativeMinted_lt: String
  cumulativeMinted_gte: String
  cumulativeMinted_lte: String
  cumulativeMinted_in: [String!]
  cumulativeMinted_not_in: [String!]
  cumulativeMinted_contains: String
  cumulativeMinted_not_contains: String
  cumulativeMinted_starts_with: String
  cumulativeMinted_not_starts_with: String
  cumulativeMinted_ends_with: String
  cumulativeMinted_not_ends_with: String
  cumulativeSwappedAsOutput: String
  cumulativeSwappedAsOutput_not: String
  cumulativeSwappedAsOutput_gt: String
  cumulativeSwappedAsOutput_lt: String
  cumulativeSwappedAsOutput_gte: String
  cumulativeSwappedAsOutput_lte: String
  cumulativeSwappedAsOutput_in: [String!]
  cumulativeSwappedAsOutput_not_in: [String!]
  cumulativeSwappedAsOutput_contains: String
  cumulativeSwappedAsOutput_not_contains: String
  cumulativeSwappedAsOutput_starts_with: String
  cumulativeSwappedAsOutput_not_starts_with: String
  cumulativeSwappedAsOutput_ends_with: String
  cumulativeSwappedAsOutput_not_ends_with: String
  cumulativeRedeemed: String
  cumulativeRedeemed_not: String
  cumulativeRedeemed_gt: String
  cumulativeRedeemed_lt: String
  cumulativeRedeemed_gte: String
  cumulativeRedeemed_lte: String
  cumulativeRedeemed_in: [String!]
  cumulativeRedeemed_not_in: [String!]
  cumulativeRedeemed_contains: String
  cumulativeRedeemed_not_contains: String
  cumulativeRedeemed_starts_with: String
  cumulativeRedeemed_not_starts_with: String
  cumulativeRedeemed_ends_with: String
  cumulativeRedeemed_not_ends_with: String
  cumulativeFeesPaid: String
  cumulativeFeesPaid_not: String
  cumulativeFeesPaid_gt: String
  cumulativeFeesPaid_lt: String
  cumulativeFeesPaid_gte: String
  cumulativeFeesPaid_lte: String
  cumulativeFeesPaid_in: [String!]
  cumulativeFeesPaid_not_in: [String!]
  cumulativeFeesPaid_contains: String
  cumulativeFeesPaid_not_contains: String
  cumulativeFeesPaid_starts_with: String
  cumulativeFeesPaid_not_starts_with: String
  cumulativeFeesPaid_ends_with: String
  cumulativeFeesPaid_not_ends_with: String
}
"""A Basket of Bassets"""
type Basket {
  id: ID!
  """The Bassets in the Basket"""
  bassets(skip: Int = 0, first: Int = 100, orderBy: Basset_orderBy, orderDirection: OrderDirection, where: Basset_filter): [Basset!]!
  """The collateralisation ratio of the Basket (mUSD only)"""
  collateralisationRatio: BigInt
  """Max number of Bassets that can be present in the Basket"""
  maxBassets: Int!
  """Flag for whether the Basket has failed"""
  undergoingRecol: Boolean!
  """Flag for whether the Basket has failed"""
  failed: Boolean!
  """FeederPool the Basket belongs to"""
  feederPool: FeederPool
}
type FeederPool {
  id: ID!
  ampData: AmpData!
  basket: Basket!
  cacheSize: BigInt!
  cumulativeFeesPaid: Metric!
  cumulativeInterestCollected: Metric!
  cumulativeInterestDistributed: Metric!
  cumulativeLiquidatorDeposited: Metric!
  cumulativeMinted: Metric!
  cumulativeRedeemed: Metric!
  cumulativeSwapped: Metric!
  dailyAPY: BigDecimal!
  invariantK: BigInt!
  fasset: Token!
  governanceFeeRate: BigInt!
  hardMax: BigInt!
  hardMin: BigInt!
  masset: Token!
  pendingFees: BigInt!
  price: BigInt!
  swapFeeRate: BigInt!
  redemptionFeeRate: BigInt!
  token: Token!
  totalMints: Counter!
  totalRedeemMassets: Counter!
  totalRedemptions: Counter!
  totalSupply: Metric!
  totalSwaps: Counter!
  mintMultiTransactions(skip: Int = 0, first: Int = 100, orderBy: FPMintMultiTransaction_orderBy, orderDirection: OrderDirection, where: FPMintMultiTransaction_filter): [FPMintMultiTransaction!]!
  mintSingleTransactions(skip: Int = 0, first: Int = 100, orderBy: FPMintSingleTransaction_orderBy, orderDirection: OrderDirection, where: FPMintSingleTransaction_filter): [FPMintSingleTransaction!]!
  redeemTransactions(skip: Int = 0, first: Int = 100, orderBy: FPRedeemTransaction_orderBy, orderDirection: OrderDirection, where: FPRedeemTransaction_filter): [FPRedeemTransaction!]!
  swapTransactions(skip: Int = 0, first: Int = 100, orderBy: FPSwapTransaction_orderBy, orderDirection: OrderDirection, where: FPSwapTransaction_filter): [FPSwapTransaction!]!
  vault: BoostedSavingsVault!
  accounts(skip: Int = 0, first: Int = 100, orderBy: FeederPoolAccount_orderBy, orderDirection: OrderDirection, where: FeederPoolAccount_filter): [FeederPoolAccount!]!
}
"""
Amplification value; amplifies the rate of change of the curve.
Lower A = higher rate of change = higher slippage.
"""
type AmpData {
  id: ID!
  currentA: BigInt!
  targetA: BigInt!
  startTime: BigInt!
  rampEndTime: BigInt!
}
enum FPMintMultiTransaction_orderBy {
  id
  hash
  block
  sender
  recipient
  timestamp
  feederPool
  massetUnits
  inputs
  bassetsUnits
}
input FPMintMultiTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  recipient: Bytes
  recipient_not: Bytes
  recipient_in: [Bytes!]
  recipient_not_in: [Bytes!]
  recipient_contains: Bytes
  recipient_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  feederPool: String
  feederPool_not: String
  feederPool_gt: String
  feederPool_lt: String
  feederPool_gte: String
  feederPool_lte: String
  feederPool_in: [String!]
  feederPool_not_in: [String!]
  feederPool_contains: String
  feederPool_not_contains: String
  feederPool_starts_with: String
  feederPool_not_starts_with: String
  feederPool_ends_with: String
  feederPool_not_ends_with: String
  massetUnits: BigInt
  massetUnits_not: BigInt
  massetUnits_gt: BigInt
  massetUnits_lt: BigInt
  massetUnits_gte: BigInt
  massetUnits_lte: BigInt
  massetUnits_in: [BigInt!]
  massetUnits_not_in: [BigInt!]
  inputs: [String!]
  inputs_not: [String!]
  inputs_contains: [String!]
  inputs_not_contains: [String!]
  bassetsUnits: [BigInt!]
  bassetsUnits_not: [BigInt!]
  bassetsUnits_contains: [BigInt!]
  bassetsUnits_not_contains: [BigInt!]
}
type FPMintMultiTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  recipient: Bytes!
  timestamp: BigInt!
  """The Feeder Pool the transaction relates to."""
  feederPool: FeederPool!
  """The amount minted in Masset units."""
  massetUnits: BigInt!
  """
  The tokens used as the collateral asset for this mint.
  This can be fAsset or mAsset.
  """
  inputs(skip: Int = 0, first: Int = 100, orderBy: Basset_orderBy, orderDirection: OrderDirection, where: Basset_filter): [Basset!]!
  """The respective Basset units for each Basset used in this mint."""
  bassetsUnits: [BigInt!]!
}
interface Transaction {
  """Transaction hash + log index"""
  id: ID!
  """Transaction hash"""
  hash: Bytes!
  """Block number the transaction is in"""
  block: Int!
  """Timestamp of the block the transaction is in"""
  timestamp: BigInt!
  """Address of the sender of the transaction"""
  sender: Bytes!
}
enum FPMintSingleTransaction_orderBy {
  id
  hash
  block
  sender
  recipient
  timestamp
  feederPool
  massetUnits
  input
  bassetUnits
}
input FPMintSingleTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  recipient: Bytes
  recipient_not: Bytes
  recipient_in: [Bytes!]
  recipient_not_in: [Bytes!]
  recipient_contains: Bytes
  recipient_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  feederPool: String
  feederPool_not: String
  feederPool_gt: String
  feederPool_lt: String
  feederPool_gte: String
  feederPool_lte: String
  feederPool_in: [String!]
  feederPool_not_in: [String!]
  feederPool_contains: String
  feederPool_not_contains: String
  feederPool_starts_with: String
  feederPool_not_starts_with: String
  feederPool_ends_with: String
  feederPool_not_ends_with: String
  massetUnits: BigInt
  massetUnits_not: BigInt
  massetUnits_gt: BigInt
  massetUnits_lt: BigInt
  massetUnits_gte: BigInt
  massetUnits_lte: BigInt
  massetUnits_in: [BigInt!]
  massetUnits_not_in: [BigInt!]
  input: String
  input_not: String
  input_gt: String
  input_lt: String
  input_gte: String
  input_lte: String
  input_in: [String!]
  input_not_in: [String!]
  input_contains: String
  input_not_contains: String
  input_starts_with: String
  input_not_starts_with: String
  input_ends_with: String
  input_not_ends_with: String
  bassetUnits: BigInt
  bassetUnits_not: BigInt
  bassetUnits_gt: BigInt
  bassetUnits_lt: BigInt
  bassetUnits_gte: BigInt
  bassetUnits_lte: BigInt
  bassetUnits_in: [BigInt!]
  bassetUnits_not_in: [BigInt!]
}
type FPMintSingleTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  recipient: Bytes!
  timestamp: BigInt!
  """The Feeder Pool the transaction relates to."""
  feederPool: FeederPool!
  """The amount minted in Masset units."""
  massetUnits: BigInt!
  """
  The token used as the collateral asset for this mint.
  This can be fAsset, mAsset or mpAsset (main pool asset).
  """
  input: Token!
  """The amount of the Basset used for this mint, in Basset units."""
  bassetUnits: BigInt!
}
enum FPRedeemTransaction_orderBy {
  id
  hash
  block
  sender
  recipient
  timestamp
  feederPool
  massetUnits
  bassets
  bassetsUnits
}
input FPRedeemTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  recipient: Bytes
  recipient_not: Bytes
  recipient_in: [Bytes!]
  recipient_not_in: [Bytes!]
  recipient_contains: Bytes
  recipient_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  feederPool: String
  feederPool_not: String
  feederPool_gt: String
  feederPool_lt: String
  feederPool_gte: String
  feederPool_lte: String
  feederPool_in: [String!]
  feederPool_not_in: [String!]
  feederPool_contains: String
  feederPool_not_contains: String
  feederPool_starts_with: String
  feederPool_not_starts_with: String
  feederPool_ends_with: String
  feederPool_not_ends_with: String
  massetUnits: BigInt
  massetUnits_not: BigInt
  massetUnits_gt: BigInt
  massetUnits_lt: BigInt
  massetUnits_gte: BigInt
  massetUnits_lte: BigInt
  massetUnits_in: [BigInt!]
  massetUnits_not_in: [BigInt!]
  bassets: [String!]
  bassets_not: [String!]
  bassets_contains: [String!]
  bassets_not_contains: [String!]
  bassetsUnits: [BigInt!]
  bassetsUnits_not: [BigInt!]
  bassetsUnits_contains: [BigInt!]
  bassetsUnits_not_contains: [BigInt!]
}
type FPRedeemTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  recipient: Bytes!
  timestamp: BigInt!
  """The Feeder Pool the transaction relates to."""
  feederPool: FeederPool!
  """The amount redeemed in Masset units."""
  massetUnits: BigInt!
  """The Bassets selected as assets to redeem."""
  bassets(skip: Int = 0, first: Int = 100, orderBy: Basset_orderBy, orderDirection: OrderDirection, where: Basset_filter): [Basset!]!
  """The respective units of each Basset selected to redeem."""
  bassetsUnits: [BigInt!]!
}
enum FPSwapTransaction_orderBy {
  id
  hash
  block
  sender
  timestamp
  feederPool
  massetUnits
  inputBasset
  outputBasset
  recipient
}
input FPSwapTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  feederPool: String
  feederPool_not: String
  feederPool_gt: String
  feederPool_lt: String
  feederPool_gte: String
  feederPool_lte: String
  feederPool_in: [String!]
  feederPool_not_in: [String!]
  feederPool_contains: String
  feederPool_not_contains: String
  feederPool_starts_with: String
  feederPool_not_starts_with: String
  feederPool_ends_with: String
  feederPool_not_ends_with: String
  massetUnits: BigInt
  massetUnits_not: BigInt
  massetUnits_gt: BigInt
  massetUnits_lt: BigInt
  massetUnits_gte: BigInt
  massetUnits_lte: BigInt
  massetUnits_in: [BigInt!]
  massetUnits_not_in: [BigInt!]
  inputBasset: String
  inputBasset_not: String
  inputBasset_gt: String
  inputBasset_lt: String
  inputBasset_gte: String
  inputBasset_lte: String
  inputBasset_in: [String!]
  inputBasset_not_in: [String!]
  inputBasset_contains: String
  inputBasset_not_contains: String
  inputBasset_starts_with: String
  inputBasset_not_starts_with: String
  inputBasset_ends_with: String
  inputBasset_not_ends_with: String
  outputBasset: String
  outputBasset_not: String
  outputBasset_gt: String
  outputBasset_lt: String
  outputBasset_gte: String
  outputBasset_lte: String
  outputBasset_in: [String!]
  outputBasset_not_in: [String!]
  outputBasset_contains: String
  outputBasset_not_contains: String
  outputBasset_starts_with: String
  outputBasset_not_starts_with: String
  outputBasset_ends_with: String
  outputBasset_not_ends_with: String
  recipient: Bytes
  recipient_not: Bytes
  recipient_in: [Bytes!]
  recipient_not_in: [Bytes!]
  recipient_contains: Bytes
  recipient_not_contains: Bytes
}
type FPSwapTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  timestamp: BigInt!
  """The Feeder Pool the transaction relates to."""
  feederPool: FeederPool!
  """The amount of the swap output in Masset units"""
  massetUnits: BigInt!
  """The Basset used as the input for this swap."""
  inputBasset: Basset!
  """The Basset used as the output for this swap."""
  outputBasset: Basset!
  """The recipient of the swap output."""
  recipient: Bytes!
}
type BoostedSavingsVault {
  id: ID!
  """ID of the vault on the BoostDirector contract"""
  directorVaultId: Int
  """The boost coefficient"""
  boostCoeff: BigInt
  """The price coefficient"""
  priceCoeff: BigInt
  """The Feeder Pool associated with this vault (optional)"""
  feederPool: FeederPool
  accounts(skip: Int = 0, first: Int = 100, orderBy: BoostedSavingsVaultAccount_orderBy, orderDirection: OrderDirection, where: BoostedSavingsVaultAccount_filter): [BoostedSavingsVaultAccount!]!
  rewardEntries(skip: Int = 0, first: Int = 100, orderBy: BoostedSavingsVaultRewardEntry_orderBy, orderDirection: OrderDirection, where: BoostedSavingsVaultRewardEntry_filter): [BoostedSavingsVaultRewardEntry!]!
  """Length of token lockup (in seconds), after rewards are earned"""
  lockupDuration: Int!
  """Percentage of earned tokens that are unlocked immediately upon claiming"""
  unlockPercentage: BigInt!
  """Rewards period duration (in seconds)"""
  periodDuration: Int!
  """Timestamp for current rewards period finish"""
  periodFinish: Int!
  """Last time any user took action"""
  lastUpdateTime: Int!
  """The staking token, e.g. imUSD"""
  stakingToken: Token!
  """The reward per token stored"""
  rewardPerTokenStored: BigInt!
  """The reward rate for the rest of the rewards period"""
  rewardRate: BigInt!
  """The rewards token, e.g. MTA"""
  rewardsToken: Token!
  """Rewards distributor contract address"""
  rewardsDistributor: Bytes!
  """Staking rewards contract address"""
  stakingContract: Bytes!
  """Total boosted amount"""
  totalSupply: BigInt!
  """Total staking rewards (rewardRate * periodDuration)"""
  totalStakingRewards: BigInt!
  stakeTransactions(skip: Int = 0, first: Int = 100, orderBy: BoostedSavingsVaultStakeTransaction_orderBy, orderDirection: OrderDirection, where: BoostedSavingsVaultStakeTransaction_filter): [BoostedSavingsVaultStakeTransaction!]!
  rewardAddedTransactions(skip: Int = 0, first: Int = 100, orderBy: BoostedSavingsVaultRewardAddedTransaction_orderBy, orderDirection: OrderDirection, where: BoostedSavingsVaultRewardAddedTransaction_filter): [BoostedSavingsVaultRewardAddedTransaction!]!
  rewardPaidTransactions(skip: Int = 0, first: Int = 100, orderBy: BoostedSavingsVaultRewardPaidTransaction_orderBy, orderDirection: OrderDirection, where: BoostedSavingsVaultRewardPaidTransaction_filter): [BoostedSavingsVaultRewardPaidTransaction!]!
  withdrawTransactions(skip: Int = 0, first: Int = 100, orderBy: BoostedSavingsVaultWithdrawTransaction_orderBy, orderDirection: OrderDirection, where: BoostedSavingsVaultWithdrawTransaction_filter): [BoostedSavingsVaultWithdrawTransaction!]!
}
enum BoostedSavingsVaultAccount_orderBy {
  id
  boostedSavingsVault
  account
  rawBalance
  boostedBalance
  rewardPerTokenPaid
  rewards
  lastAction
  lastClaim
  rewardCount
  cumulativeClaimed
  rewardEntries
  stakeTransactions
  rewardPaidTransactions
  withdrawTransactions
}
input BoostedSavingsVaultAccount_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  boostedSavingsVault: String
  boostedSavingsVault_not: String
  boostedSavingsVault_gt: String
  boostedSavingsVault_lt: String
  boostedSavingsVault_gte: String
  boostedSavingsVault_lte: String
  boostedSavingsVault_in: [String!]
  boostedSavingsVault_not_in: [String!]
  boostedSavingsVault_contains: String
  boostedSavingsVault_not_contains: String
  boostedSavingsVault_starts_with: String
  boostedSavingsVault_not_starts_with: String
  boostedSavingsVault_ends_with: String
  boostedSavingsVault_not_ends_with: String
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_not_contains: String
  account_starts_with: String
  account_not_starts_with: String
  account_ends_with: String
  account_not_ends_with: String
  rawBalance: BigInt
  rawBalance_not: BigInt
  rawBalance_gt: BigInt
  rawBalance_lt: BigInt
  rawBalance_gte: BigInt
  rawBalance_lte: BigInt
  rawBalance_in: [BigInt!]
  rawBalance_not_in: [BigInt!]
  boostedBalance: BigInt
  boostedBalance_not: BigInt
  boostedBalance_gt: BigInt
  boostedBalance_lt: BigInt
  boostedBalance_gte: BigInt
  boostedBalance_lte: BigInt
  boostedBalance_in: [BigInt!]
  boostedBalance_not_in: [BigInt!]
  rewardPerTokenPaid: BigInt
  rewardPerTokenPaid_not: BigInt
  rewardPerTokenPaid_gt: BigInt
  rewardPerTokenPaid_lt: BigInt
  rewardPerTokenPaid_gte: BigInt
  rewardPerTokenPaid_lte: BigInt
  rewardPerTokenPaid_in: [BigInt!]
  rewardPerTokenPaid_not_in: [BigInt!]
  rewards: BigInt
  rewards_not: BigInt
  rewards_gt: BigInt
  rewards_lt: BigInt
  rewards_gte: BigInt
  rewards_lte: BigInt
  rewards_in: [BigInt!]
  rewards_not_in: [BigInt!]
  lastAction: Int
  lastAction_not: Int
  lastAction_gt: Int
  lastAction_lt: Int
  lastAction_gte: Int
  lastAction_lte: Int
  lastAction_in: [Int!]
  lastAction_not_in: [Int!]
  lastClaim: Int
  lastClaim_not: Int
  lastClaim_gt: Int
  lastClaim_lt: Int
  lastClaim_gte: Int
  lastClaim_lte: Int
  lastClaim_in: [Int!]
  lastClaim_not_in: [Int!]
  rewardCount: Int
  rewardCount_not: Int
  rewardCount_gt: Int
  rewardCount_lt: Int
  rewardCount_gte: Int
  rewardCount_lte: Int
  rewardCount_in: [Int!]
  rewardCount_not_in: [Int!]
  cumulativeClaimed: String
  cumulativeClaimed_not: String
  cumulativeClaimed_gt: String
  cumulativeClaimed_lt: String
  cumulativeClaimed_gte: String
  cumulativeClaimed_lte: String
  cumulativeClaimed_in: [String!]
  cumulativeClaimed_not_in: [String!]
  cumulativeClaimed_contains: String
  cumulativeClaimed_not_contains: String
  cumulativeClaimed_starts_with: String
  cumulativeClaimed_not_starts_with: String
  cumulativeClaimed_ends_with: String
  cumulativeClaimed_not_ends_with: String
}
type BoostedSavingsVaultAccount {
  id: ID!
  boostedSavingsVault: BoostedSavingsVault!
  account: Account!
  rawBalance: BigInt!
  boostedBalance: BigInt!
  rewardPerTokenPaid: BigInt!
  rewards: BigInt!
  lastAction: Int!
  lastClaim: Int!
  rewardCount: Int!
  cumulativeClaimed: Metric!
  rewardEntries(skip: Int = 0, first: Int = 100, orderBy: BoostedSavingsVaultRewardEntry_orderBy, orderDirection: OrderDirection, where: BoostedSavingsVaultRewardEntry_filter): [BoostedSavingsVaultRewardEntry!]!
  stakeTransactions(skip: Int = 0, first: Int = 100, orderBy: BoostedSavingsVaultStakeTransaction_orderBy, orderDirection: OrderDirection, where: BoostedSavingsVaultStakeTransaction_filter): [BoostedSavingsVaultStakeTransaction!]!
  rewardPaidTransactions(skip: Int = 0, first: Int = 100, orderBy: BoostedSavingsVaultRewardPaidTransaction_orderBy, orderDirection: OrderDirection, where: BoostedSavingsVaultRewardPaidTransaction_filter): [BoostedSavingsVaultRewardPaidTransaction!]!
  withdrawTransactions(skip: Int = 0, first: Int = 100, orderBy: BoostedSavingsVaultWithdrawTransaction_orderBy, orderDirection: OrderDirection, where: BoostedSavingsVaultWithdrawTransaction_filter): [BoostedSavingsVaultWithdrawTransaction!]!
}
type Account {
  id: ID!
  boostedSavingsVaultAccounts(skip: Int = 0, first: Int = 100, orderBy: BoostedSavingsVaultAccount_orderBy, orderDirection: OrderDirection, where: BoostedSavingsVaultAccount_filter): [BoostedSavingsVaultAccount!]!
  feederPoolAccounts(skip: Int = 0, first: Int = 100, orderBy: FeederPoolAccount_orderBy, orderDirection: OrderDirection, where: FeederPoolAccount_filter): [FeederPoolAccount!]!
  boostDirection(skip: Int = 0, first: Int = 100, orderBy: BoostedSavingsVault_orderBy, orderDirection: OrderDirection, where: BoostedSavingsVault_filter): [BoostedSavingsVault!]!
}
enum FeederPoolAccount_orderBy {
  id
  account
  feederPool
  cumulativeEarned
  cumulativeEarnedVault
  balance
  price
  lastUpdate
  balanceVault
  priceVault
  lastUpdateVault
}
input FeederPoolAccount_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_not_contains: String
  account_starts_with: String
  account_not_starts_with: String
  account_ends_with: String
  account_not_ends_with: String
  feederPool: String
  feederPool_not: String
  feederPool_gt: String
  feederPool_lt: String
  feederPool_gte: String
  feederPool_lte: String
  feederPool_in: [String!]
  feederPool_not_in: [String!]
  feederPool_contains: String
  feederPool_not_contains: String
  feederPool_starts_with: String
  feederPool_not_starts_with: String
  feederPool_ends_with: String
  feederPool_not_ends_with: String
  cumulativeEarned: String
  cumulativeEarned_not: String
  cumulativeEarned_gt: String
  cumulativeEarned_lt: String
  cumulativeEarned_gte: String
  cumulativeEarned_lte: String
  cumulativeEarned_in: [String!]
  cumulativeEarned_not_in: [String!]
  cumulativeEarned_contains: String
  cumulativeEarned_not_contains: String
  cumulativeEarned_starts_with: String
  cumulativeEarned_not_starts_with: String
  cumulativeEarned_ends_with: String
  cumulativeEarned_not_ends_with: String
  cumulativeEarnedVault: String
  cumulativeEarnedVault_not: String
  cumulativeEarnedVault_gt: String
  cumulativeEarnedVault_lt: String
  cumulativeEarnedVault_gte: String
  cumulativeEarnedVault_lte: String
  cumulativeEarnedVault_in: [String!]
  cumulativeEarnedVault_not_in: [String!]
  cumulativeEarnedVault_contains: String
  cumulativeEarnedVault_not_contains: String
  cumulativeEarnedVault_starts_with: String
  cumulativeEarnedVault_not_starts_with: String
  cumulativeEarnedVault_ends_with: String
  cumulativeEarnedVault_not_ends_with: String
  balance: BigInt
  balance_not: BigInt
  balance_gt: BigInt
  balance_lt: BigInt
  balance_gte: BigInt
  balance_lte: BigInt
  balance_in: [BigInt!]
  balance_not_in: [BigInt!]
  price: BigInt
  price_not: BigInt
  price_gt: BigInt
  price_lt: BigInt
  price_gte: BigInt
  price_lte: BigInt
  price_in: [BigInt!]
  price_not_in: [BigInt!]
  lastUpdate: Int
  lastUpdate_not: Int
  lastUpdate_gt: Int
  lastUpdate_lt: Int
  lastUpdate_gte: Int
  lastUpdate_lte: Int
  lastUpdate_in: [Int!]
  lastUpdate_not_in: [Int!]
  balanceVault: BigInt
  balanceVault_not: BigInt
  balanceVault_gt: BigInt
  balanceVault_lt: BigInt
  balanceVault_gte: BigInt
  balanceVault_lte: BigInt
  balanceVault_in: [BigInt!]
  balanceVault_not_in: [BigInt!]
  priceVault: BigInt
  priceVault_not: BigInt
  priceVault_gt: BigInt
  priceVault_lt: BigInt
  priceVault_gte: BigInt
  priceVault_lte: BigInt
  priceVault_in: [BigInt!]
  priceVault_not_in: [BigInt!]
  lastUpdateVault: Int
  lastUpdateVault_not: Int
  lastUpdateVault_gt: Int
  lastUpdateVault_lt: Int
  lastUpdateVault_gte: Int
  lastUpdateVault_lte: Int
  lastUpdateVault_in: [Int!]
  lastUpdateVault_not_in: [Int!]
}
type FeederPoolAccount {
  id: ID!
  account: Account!
  feederPool: FeederPool!
  cumulativeEarned: Metric!
  cumulativeEarnedVault: Metric!
  balance: BigInt!
  price: BigInt!
  lastUpdate: Int!
  balanceVault: BigInt!
  priceVault: BigInt!
  lastUpdateVault: Int!
}
enum BoostedSavingsVault_orderBy {
  id
  directorVaultId
  boostCoeff
  priceCoeff
  feederPool
  accounts
  rewardEntries
  lockupDuration
  unlockPercentage
  periodDuration
  periodFinish
  lastUpdateTime
  stakingToken
  rewardPerTokenStored
  rewardRate
  rewardsToken
  rewardsDistributor
  stakingContract
  totalSupply
  totalStakingRewards
  stakeTransactions
  rewardAddedTransactions
  rewardPaidTransactions
  withdrawTransactions
}
input BoostedSavingsVault_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  directorVaultId: Int
  directorVaultId_not: Int
  directorVaultId_gt: Int
  directorVaultId_lt: Int
  directorVaultId_gte: Int
  directorVaultId_lte: Int
  directorVaultId_in: [Int!]
  directorVaultId_not_in: [Int!]
  boostCoeff: BigInt
  boostCoeff_not: BigInt
  boostCoeff_gt: BigInt
  boostCoeff_lt: BigInt
  boostCoeff_gte: BigInt
  boostCoeff_lte: BigInt
  boostCoeff_in: [BigInt!]
  boostCoeff_not_in: [BigInt!]
  priceCoeff: BigInt
  priceCoeff_not: BigInt
  priceCoeff_gt: BigInt
  priceCoeff_lt: BigInt
  priceCoeff_gte: BigInt
  priceCoeff_lte: BigInt
  priceCoeff_in: [BigInt!]
  priceCoeff_not_in: [BigInt!]
  feederPool: String
  feederPool_not: String
  feederPool_gt: String
  feederPool_lt: String
  feederPool_gte: String
  feederPool_lte: String
  feederPool_in: [String!]
  feederPool_not_in: [String!]
  feederPool_contains: String
  feederPool_not_contains: String
  feederPool_starts_with: String
  feederPool_not_starts_with: String
  feederPool_ends_with: String
  feederPool_not_ends_with: String
  lockupDuration: Int
  lockupDuration_not: Int
  lockupDuration_gt: Int
  lockupDuration_lt: Int
  lockupDuration_gte: Int
  lockupDuration_lte: Int
  lockupDuration_in: [Int!]
  lockupDuration_not_in: [Int!]
  unlockPercentage: BigInt
  unlockPercentage_not: BigInt
  unlockPercentage_gt: BigInt
  unlockPercentage_lt: BigInt
  unlockPercentage_gte: BigInt
  unlockPercentage_lte: BigInt
  unlockPercentage_in: [BigInt!]
  unlockPercentage_not_in: [BigInt!]
  periodDuration: Int
  periodDuration_not: Int
  periodDuration_gt: Int
  periodDuration_lt: Int
  periodDuration_gte: Int
  periodDuration_lte: Int
  periodDuration_in: [Int!]
  periodDuration_not_in: [Int!]
  periodFinish: Int
  periodFinish_not: Int
  periodFinish_gt: Int
  periodFinish_lt: Int
  periodFinish_gte: Int
  periodFinish_lte: Int
  periodFinish_in: [Int!]
  periodFinish_not_in: [Int!]
  lastUpdateTime: Int
  lastUpdateTime_not: Int
  lastUpdateTime_gt: Int
  lastUpdateTime_lt: Int
  lastUpdateTime_gte: Int
  lastUpdateTime_lte: Int
  lastUpdateTime_in: [Int!]
  lastUpdateTime_not_in: [Int!]
  stakingToken: String
  stakingToken_not: String
  stakingToken_gt: String
  stakingToken_lt: String
  stakingToken_gte: String
  stakingToken_lte: String
  stakingToken_in: [String!]
  stakingToken_not_in: [String!]
  stakingToken_contains: String
  stakingToken_not_contains: String
  stakingToken_starts_with: String
  stakingToken_not_starts_with: String
  stakingToken_ends_with: String
  stakingToken_not_ends_with: String
  rewardPerTokenStored: BigInt
  rewardPerTokenStored_not: BigInt
  rewardPerTokenStored_gt: BigInt
  rewardPerTokenStored_lt: BigInt
  rewardPerTokenStored_gte: BigInt
  rewardPerTokenStored_lte: BigInt
  rewardPerTokenStored_in: [BigInt!]
  rewardPerTokenStored_not_in: [BigInt!]
  rewardRate: BigInt
  rewardRate_not: BigInt
  rewardRate_gt: BigInt
  rewardRate_lt: BigInt
  rewardRate_gte: BigInt
  rewardRate_lte: BigInt
  rewardRate_in: [BigInt!]
  rewardRate_not_in: [BigInt!]
  rewardsToken: String
  rewardsToken_not: String
  rewardsToken_gt: String
  rewardsToken_lt: String
  rewardsToken_gte: String
  rewardsToken_lte: String
  rewardsToken_in: [String!]
  rewardsToken_not_in: [String!]
  rewardsToken_contains: String
  rewardsToken_not_contains: String
  rewardsToken_starts_with: String
  rewardsToken_not_starts_with: String
  rewardsToken_ends_with: String
  rewardsToken_not_ends_with: String
  rewardsDistributor: Bytes
  rewardsDistributor_not: Bytes
  rewardsDistributor_in: [Bytes!]
  rewardsDistributor_not_in: [Bytes!]
  rewardsDistributor_contains: Bytes
  rewardsDistributor_not_contains: Bytes
  stakingContract: Bytes
  stakingContract_not: Bytes
  stakingContract_in: [Bytes!]
  stakingContract_not_in: [Bytes!]
  stakingContract_contains: Bytes
  stakingContract_not_contains: Bytes
  totalSupply: BigInt
  totalSupply_not: BigInt
  totalSupply_gt: BigInt
  totalSupply_lt: BigInt
  totalSupply_gte: BigInt
  totalSupply_lte: BigInt
  totalSupply_in: [BigInt!]
  totalSupply_not_in: [BigInt!]
  totalStakingRewards: BigInt
  totalStakingRewards_not: BigInt
  totalStakingRewards_gt: BigInt
  totalStakingRewards_lt: BigInt
  totalStakingRewards_gte: BigInt
  totalStakingRewards_lte: BigInt
  totalStakingRewards_in: [BigInt!]
  totalStakingRewards_not_in: [BigInt!]
}
enum BoostedSavingsVaultRewardEntry_orderBy {
  id
  account
  boostedSavingsVault
  index
  start
  finish
  rate
}
input BoostedSavingsVaultRewardEntry_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_not_contains: String
  account_starts_with: String
  account_not_starts_with: String
  account_ends_with: String
  account_not_ends_with: String
  boostedSavingsVault: String
  boostedSavingsVault_not: String
  boostedSavingsVault_gt: String
  boostedSavingsVault_lt: String
  boostedSavingsVault_gte: String
  boostedSavingsVault_lte: String
  boostedSavingsVault_in: [String!]
  boostedSavingsVault_not_in: [String!]
  boostedSavingsVault_contains: String
  boostedSavingsVault_not_contains: String
  boostedSavingsVault_starts_with: String
  boostedSavingsVault_not_starts_with: String
  boostedSavingsVault_ends_with: String
  boostedSavingsVault_not_ends_with: String
  index: Int
  index_not: Int
  index_gt: Int
  index_lt: Int
  index_gte: Int
  index_lte: Int
  index_in: [Int!]
  index_not_in: [Int!]
  start: Int
  start_not: Int
  start_gt: Int
  start_lt: Int
  start_gte: Int
  start_lte: Int
  start_in: [Int!]
  start_not_in: [Int!]
  finish: Int
  finish_not: Int
  finish_gt: Int
  finish_lt: Int
  finish_gte: Int
  finish_lte: Int
  finish_in: [Int!]
  finish_not_in: [Int!]
  rate: BigInt
  rate_not: BigInt
  rate_gt: BigInt
  rate_lt: BigInt
  rate_gte: BigInt
  rate_lte: BigInt
  rate_in: [BigInt!]
  rate_not_in: [BigInt!]
}
type BoostedSavingsVaultRewardEntry {
  id: ID!
  account: BoostedSavingsVaultAccount!
  boostedSavingsVault: BoostedSavingsVault!
  index: Int!
  start: Int!
  finish: Int!
  rate: BigInt!
}
enum BoostedSavingsVaultStakeTransaction_orderBy {
  id
  hash
  block
  sender
  timestamp
  boostedSavingsVault
  amount
  account
}
input BoostedSavingsVaultStakeTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  boostedSavingsVault: String
  boostedSavingsVault_not: String
  boostedSavingsVault_gt: String
  boostedSavingsVault_lt: String
  boostedSavingsVault_gte: String
  boostedSavingsVault_lte: String
  boostedSavingsVault_in: [String!]
  boostedSavingsVault_not_in: [String!]
  boostedSavingsVault_contains: String
  boostedSavingsVault_not_contains: String
  boostedSavingsVault_starts_with: String
  boostedSavingsVault_not_starts_with: String
  boostedSavingsVault_ends_with: String
  boostedSavingsVault_not_ends_with: String
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_not_contains: String
  account_starts_with: String
  account_not_starts_with: String
  account_ends_with: String
  account_not_ends_with: String
}
type BoostedSavingsVaultStakeTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  timestamp: BigInt!
  """The BoostedSavingsVault the transaction relates to."""
  boostedSavingsVault: BoostedSavingsVault!
  """The amount staked."""
  amount: BigInt!
  """The account the staked amount is being added for."""
  account: BoostedSavingsVaultAccount!
}
enum BoostedSavingsVaultRewardPaidTransaction_orderBy {
  id
  hash
  block
  sender
  timestamp
  boostedSavingsVault
  amount
  account
}
input BoostedSavingsVaultRewardPaidTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  boostedSavingsVault: String
  boostedSavingsVault_not: String
  boostedSavingsVault_gt: String
  boostedSavingsVault_lt: String
  boostedSavingsVault_gte: String
  boostedSavingsVault_lte: String
  boostedSavingsVault_in: [String!]
  boostedSavingsVault_not_in: [String!]
  boostedSavingsVault_contains: String
  boostedSavingsVault_not_contains: String
  boostedSavingsVault_starts_with: String
  boostedSavingsVault_not_starts_with: String
  boostedSavingsVault_ends_with: String
  boostedSavingsVault_not_ends_with: String
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_not_contains: String
  account_starts_with: String
  account_not_starts_with: String
  account_ends_with: String
  account_not_ends_with: String
}
type BoostedSavingsVaultRewardPaidTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  timestamp: BigInt!
  """The BoostedSavingsVault the transaction relates to."""
  boostedSavingsVault: BoostedSavingsVault!
  """The amount of the reward paid."""
  amount: BigInt!
  """The account receiving the rewarded amount."""
  account: BoostedSavingsVaultAccount!
}
enum BoostedSavingsVaultWithdrawTransaction_orderBy {
  id
  hash
  block
  sender
  timestamp
  boostedSavingsVault
  amount
  account
}
input BoostedSavingsVaultWithdrawTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  boostedSavingsVault: String
  boostedSavingsVault_not: String
  boostedSavingsVault_gt: String
  boostedSavingsVault_lt: String
  boostedSavingsVault_gte: String
  boostedSavingsVault_lte: String
  boostedSavingsVault_in: [String!]
  boostedSavingsVault_not_in: [String!]
  boostedSavingsVault_contains: String
  boostedSavingsVault_not_contains: String
  boostedSavingsVault_starts_with: String
  boostedSavingsVault_not_starts_with: String
  boostedSavingsVault_ends_with: String
  boostedSavingsVault_not_ends_with: String
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_not_contains: String
  account_starts_with: String
  account_not_starts_with: String
  account_ends_with: String
  account_not_ends_with: String
}
type BoostedSavingsVaultWithdrawTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  timestamp: BigInt!
  """The BoostedSavingsVault the transaction relates to."""
  boostedSavingsVault: BoostedSavingsVault!
  """The amount of the stake withdrawn."""
  amount: BigInt!
  """The account the stake is withdrawn for."""
  account: BoostedSavingsVaultAccount!
}
enum BoostedSavingsVaultRewardAddedTransaction_orderBy {
  id
  hash
  block
  sender
  timestamp
  boostedSavingsVault
  amount
}
input BoostedSavingsVaultRewardAddedTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  boostedSavingsVault: String
  boostedSavingsVault_not: String
  boostedSavingsVault_gt: String
  boostedSavingsVault_lt: String
  boostedSavingsVault_gte: String
  boostedSavingsVault_lte: String
  boostedSavingsVault_in: [String!]
  boostedSavingsVault_not_in: [String!]
  boostedSavingsVault_contains: String
  boostedSavingsVault_not_contains: String
  boostedSavingsVault_starts_with: String
  boostedSavingsVault_not_starts_with: String
  boostedSavingsVault_ends_with: String
  boostedSavingsVault_not_ends_with: String
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
}
type BoostedSavingsVaultRewardAddedTransaction implements Transaction {
  id: ID!
  hash: Bytes!
  block: Int!
  sender: Bytes!
  timestamp: BigInt!
  """The BoostedSavingsVault the transaction relates to."""
  boostedSavingsVault: BoostedSavingsVault!
  """The amount of rewards added."""
  amount: BigInt!
}
enum Basket_orderBy {
  id
  bassets
  collateralisationRatio
  maxBassets
  undergoingRecol
  failed
  feederPool
}
input Basket_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  bassets: [String!]
  bassets_not: [String!]
  bassets_contains: [String!]
  bassets_not_contains: [String!]
  collateralisationRatio: BigInt
  collateralisationRatio_not: BigInt
  collateralisationRatio_gt: BigInt
  collateralisationRatio_lt: BigInt
  collateralisationRatio_gte: BigInt
  collateralisationRatio_lte: BigInt
  collateralisationRatio_in: [BigInt!]
  collateralisationRatio_not_in: [BigInt!]
  maxBassets: Int
  maxBassets_not: Int
  maxBassets_gt: Int
  maxBassets_lt: Int
  maxBassets_gte: Int
  maxBassets_lte: Int
  maxBassets_in: [Int!]
  maxBassets_not_in: [Int!]
  undergoingRecol: Boolean
  undergoingRecol_not: Boolean
  undergoingRecol_in: [Boolean!]
  undergoingRecol_not_in: [Boolean!]
  failed: Boolean
  failed_not: Boolean
  failed_in: [Boolean!]
  failed_not_in: [Boolean!]
}
enum AmpData_orderBy {
  id
  currentA
  targetA
  startTime
  rampEndTime
}
input AmpData_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  currentA: BigInt
  currentA_not: BigInt
  currentA_gt: BigInt
  currentA_lt: BigInt
  currentA_gte: BigInt
  currentA_lte: BigInt
  currentA_in: [BigInt!]
  currentA_not_in: [BigInt!]
  targetA: BigInt
  targetA_not: BigInt
  targetA_gt: BigInt
  targetA_lt: BigInt
  targetA_gte: BigInt
  targetA_lte: BigInt
  targetA_in: [BigInt!]
  targetA_not_in: [BigInt!]
  startTime: BigInt
  startTime_not: BigInt
  startTime_gt: BigInt
  startTime_lt: BigInt
  startTime_gte: BigInt
  startTime_lte: BigInt
  startTime_in: [BigInt!]
  startTime_not_in: [BigInt!]
  rampEndTime: BigInt
  rampEndTime_not: BigInt
  rampEndTime_gt: BigInt
  rampEndTime_lt: BigInt
  rampEndTime_gte: BigInt
  rampEndTime_lte: BigInt
  rampEndTime_in: [BigInt!]
  rampEndTime_not_in: [BigInt!]
}
enum Account_orderBy {
  id
  boostedSavingsVaultAccounts
  feederPoolAccounts
  boostDirection
}
input Account_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  boostDirection: [String!]
  boostDirection_not: [String!]
  boostDirection_contains: [String!]
  boostDirection_not_contains: [String!]
}
enum FeederPool_orderBy {
  id
  ampData
  basket
  cacheSize
  cumulativeFeesPaid
  cumulativeInterestCollected
  cumulativeInterestDistributed
  cumulativeLiquidatorDeposited
  cumulativeMinted
  cumulativeRedeemed
  cumulativeSwapped
  dailyAPY
  invariantK
  fasset
  governanceFeeRate
  hardMax
  hardMin
  masset
  pendingFees
  price
  swapFeeRate
  redemptionFeeRate
  token
  totalMints
  totalRedeemMassets
  totalRedemptions
  totalSupply
  totalSwaps
  mintMultiTransactions
  mintSingleTransactions
  redeemTransactions
  swapTransactions
  vault
  accounts
}
input FeederPool_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  ampData: String
  ampData_not: String
  ampData_gt: String
  ampData_lt: String
  ampData_gte: String
  ampData_lte: String
  ampData_in: [String!]
  ampData_not_in: [String!]
  ampData_contains: String
  ampData_not_contains: String
  ampData_starts_with: String
  ampData_not_starts_with: String
  ampData_ends_with: String
  ampData_not_ends_with: String
  basket: String
  basket_not: String
  basket_gt: String
  basket_lt: String
  basket_gte: String
  basket_lte: String
  basket_in: [String!]
  basket_not_in: [String!]
  basket_contains: String
  basket_not_contains: String
  basket_starts_with: String
  basket_not_starts_with: String
  basket_ends_with: String
  basket_not_ends_with: String
  cacheSize: BigInt
  cacheSize_not: BigInt
  cacheSize_gt: BigInt
  cacheSize_lt: BigInt
  cacheSize_gte: BigInt
  cacheSize_lte: BigInt
  cacheSize_in: [BigInt!]
  cacheSize_not_in: [BigInt!]
  cumulativeFeesPaid: String
  cumulativeFeesPaid_not: String
  cumulativeFeesPaid_gt: String
  cumulativeFeesPaid_lt: String
  cumulativeFeesPaid_gte: String
  cumulativeFeesPaid_lte: String
  cumulativeFeesPaid_in: [String!]
  cumulativeFeesPaid_not_in: [String!]
  cumulativeFeesPaid_contains: String
  cumulativeFeesPaid_not_contains: String
  cumulativeFeesPaid_starts_with: String
  cumulativeFeesPaid_not_starts_with: String
  cumulativeFeesPaid_ends_with: String
  cumulativeFeesPaid_not_ends_with: String
  cumulativeInterestCollected: String
  cumulativeInterestCollected_not: String
  cumulativeInterestCollected_gt: String
  cumulativeInterestCollected_lt: String
  cumulativeInterestCollected_gte: String
  cumulativeInterestCollected_lte: String
  cumulativeInterestCollected_in: [String!]
  cumulativeInterestCollected_not_in: [String!]
  cumulativeInterestCollected_contains: String
  cumulativeInterestCollected_not_contains: String
  cumulativeInterestCollected_starts_with: String
  cumulativeInterestCollected_not_starts_with: String
  cumulativeInterestCollected_ends_with: String
  cumulativeInterestCollected_not_ends_with: String
  cumulativeInterestDistributed: String
  cumulativeInterestDistributed_not: String
  cumulativeInterestDistributed_gt: String
  cumulativeInterestDistributed_lt: String
  cumulativeInterestDistributed_gte: String
  cumulativeInterestDistributed_lte: String
  cumulativeInterestDistributed_in: [String!]
  cumulativeInterestDistributed_not_in: [String!]
  cumulativeInterestDistributed_contains: String
  cumulativeInterestDistributed_not_contains: String
  cumulativeInterestDistributed_starts_with: String
  cumulativeInterestDistributed_not_starts_with: String
  cumulativeInterestDistributed_ends_with: String
  cumulativeInterestDistributed_not_ends_with: String
  cumulativeLiquidatorDeposited: String
  cumulativeLiquidatorDeposited_not: String
  cumulativeLiquidatorDeposited_gt: String
  cumulativeLiquidatorDeposited_lt: String
  cumulativeLiquidatorDeposited_gte: String
  cumulativeLiquidatorDeposited_lte: String
  cumulativeLiquidatorDeposited_in: [String!]
  cumulativeLiquidatorDeposited_not_in: [String!]
  cumulativeLiquidatorDeposited_contains: String
  cumulativeLiquidatorDeposited_not_contains: String
  cumulativeLiquidatorDeposited_starts_with: String
  cumulativeLiquidatorDeposited_not_starts_with: String
  cumulativeLiquidatorDeposited_ends_with: String
  cumulativeLiquidatorDeposited_not_ends_with: String
  cumulativeMinted: String
  cumulativeMinted_not: String
  cumulativeMinted_gt: String
  cumulativeMinted_lt: String
  cumulativeMinted_gte: String
  cumulativeMinted_lte: String
  cumulativeMinted_in: [String!]
  cumulativeMinted_not_in: [String!]
  cumulativeMinted_contains: String
  cumulativeMinted_not_contains: String
  cumulativeMinted_starts_with: String
  cumulativeMinted_not_starts_with: String
  cumulativeMinted_ends_with: String
  cumulativeMinted_not_ends_with: String
  cumulativeRedeemed: String
  cumulativeRedeemed_not: String
  cumulativeRedeemed_gt: String
  cumulativeRedeemed_lt: String
  cumulativeRedeemed_gte: String
  cumulativeRedeemed_lte: String
  cumulativeRedeemed_in: [String!]
  cumulativeRedeemed_not_in: [String!]
  cumulativeRedeemed_contains: String
  cumulativeRedeemed_not_contains: String
  cumulativeRedeemed_starts_with: String
  cumulativeRedeemed_not_starts_with: String
  cumulativeRedeemed_ends_with: String
  cumulativeRedeemed_not_ends_with: String
  cumulativeSwapped: String
  cumulativeSwapped_not: String
  cumulativeSwapped_gt: String
  cumulativeSwapped_lt: String
  cumulativeSwapped_gte: String
  cumulativeSwapped_lte: String
  cumulativeSwapped_in: [String!]
  cumulativeSwapped_not_in: [String!]
  cumulativeSwapped_contains: String
  cumulativeSwapped_not_contains: String
  cumulativeSwapped_starts_with: String
  cumulativeSwapped_not_starts_with: String
  cumulativeSwapped_ends_with: String
  cumulativeSwapped_not_ends_with: String
  dailyAPY: BigDecimal
  dailyAPY_not: BigDecimal
  dailyAPY_gt: BigDecimal
  dailyAPY_lt: BigDecimal
  dailyAPY_gte: BigDecimal
  dailyAPY_lte: BigDecimal
  dailyAPY_in: [BigDecimal!]
  dailyAPY_not_in: [BigDecimal!]
  invariantK: BigInt
  invariantK_not: BigInt
  invariantK_gt: BigInt
  invariantK_lt: BigInt
  invariantK_gte: BigInt
  invariantK_lte: BigInt
  invariantK_in: [BigInt!]
  invariantK_not_in: [BigInt!]
  fasset: String
  fasset_not: String
  fasset_gt: String
  fasset_lt: String
  fasset_gte: String
  fasset_lte: String
  fasset_in: [String!]
  fasset_not_in: [String!]
  fasset_contains: String
  fasset_not_contains: String
  fasset_starts_with: String
  fasset_not_starts_with: String
  fasset_ends_with: String
  fasset_not_ends_with: String
  governanceFeeRate: BigInt
  governanceFeeRate_not: BigInt
  governanceFeeRate_gt: BigInt
  governanceFeeRate_lt: BigInt
  governanceFeeRate_gte: BigInt
  governanceFeeRate_lte: BigInt
  governanceFeeRate_in: [BigInt!]
  governanceFeeRate_not_in: [BigInt!]
  hardMax: BigInt
  hardMax_not: BigInt
  hardMax_gt: BigInt
  hardMax_lt: BigInt
  hardMax_gte: BigInt
  hardMax_lte: BigInt
  hardMax_in: [BigInt!]
  hardMax_not_in: [BigInt!]
  hardMin: BigInt
  hardMin_not: BigInt
  hardMin_gt: BigInt
  hardMin_lt: BigInt
  hardMin_gte: BigInt
  hardMin_lte: BigInt
  hardMin_in: [BigInt!]
  hardMin_not_in: [BigInt!]
  masset: String
  masset_not: String
  masset_gt: String
  masset_lt: String
  masset_gte: String
  masset_lte: String
  masset_in: [String!]
  masset_not_in: [String!]
  masset_contains: String
  masset_not_contains: String
  masset_starts_with: String
  masset_not_starts_with: String
  masset_ends_with: String
  masset_not_ends_with: String
  pendingFees: BigInt
  pendingFees_not: BigInt
  pendingFees_gt: BigInt
  pendingFees_lt: BigInt
  pendingFees_gte: BigInt
  pendingFees_lte: BigInt
  pendingFees_in: [BigInt!]
  pendingFees_not_in: [BigInt!]
  price: BigInt
  price_not: BigInt
  price_gt: BigInt
  price_lt: BigInt
  price_gte: BigInt
  price_lte: BigInt
  price_in: [BigInt!]
  price_not_in: [BigInt!]
  swapFeeRate: BigInt
  swapFeeRate_not: BigInt
  swapFeeRate_gt: BigInt
  swapFeeRate_lt: BigInt
  swapFeeRate_gte: BigInt
  swapFeeRate_lte: BigInt
  swapFeeRate_in: [BigInt!]
  swapFeeRate_not_in: [BigInt!]
  redemptionFeeRate: BigInt
  redemptionFeeRate_not: BigInt
  redemptionFeeRate_gt: BigInt
  redemptionFeeRate_lt: BigInt
  redemptionFeeRate_gte: BigInt
  redemptionFeeRate_lte: BigInt
  redemptionFeeRate_in: [BigInt!]
  redemptionFeeRate_not_in: [BigInt!]
  token: String
  token_not: String
  token_gt: String
  token_lt: String
  token_gte: String
  token_lte: String
  token_in: [String!]
  token_not_in: [String!]
  token_contains: String
  token_not_contains: String
  token_starts_with: String
  token_not_starts_with: String
  token_ends_with: String
  token_not_ends_with: String
  totalMints: String
  totalMints_not: String
  totalMints_gt: String
  totalMints_lt: String
  totalMints_gte: String
  totalMints_lte: String
  totalMints_in: [String!]
  totalMints_not_in: [String!]
  totalMints_contains: String
  totalMints_not_contains: String
  totalMints_starts_with: String
  totalMints_not_starts_with: String
  totalMints_ends_with: String
  totalMints_not_ends_with: String
  totalRedeemMassets: String
  totalRedeemMassets_not: String
  totalRedeemMassets_gt: String
  totalRedeemMassets_lt: String
  totalRedeemMassets_gte: String
  totalRedeemMassets_lte: String
  totalRedeemMassets_in: [String!]
  totalRedeemMassets_not_in: [String!]
  totalRedeemMassets_contains: String
  totalRedeemMassets_not_contains: String
  totalRedeemMassets_starts_with: String
  totalRedeemMassets_not_starts_with: String
  totalRedeemMassets_ends_with: String
  totalRedeemMassets_not_ends_with: String
  totalRedemptions: String
  totalRedemptions_not: String
  totalRedemptions_gt: String
  totalRedemptions_lt: String
  totalRedemptions_gte: String
  totalRedemptions_lte: String
  totalRedemptions_in: [String!]
  totalRedemptions_not_in: [String!]
  totalRedemptions_contains: String
  totalRedemptions_not_contains: String
  totalRedemptions_starts_with: String
  totalRedemptions_not_starts_with: String
  totalRedemptions_ends_with: String
  totalRedemptions_not_ends_with: String
  totalSupply: String
  totalSupply_not: String
  totalSupply_gt: String
  totalSupply_lt: String
  totalSupply_gte: String
  totalSupply_lte: String
  totalSupply_in: [String!]
  totalSupply_not_in: [String!]
  totalSupply_contains: String
  totalSupply_not_contains: String
  totalSupply_starts_with: String
  totalSupply_not_starts_with: String
  totalSupply_ends_with: String
  totalSupply_not_ends_with: String
  totalSwaps: String
  totalSwaps_not: String
  totalSwaps_gt: String
  totalSwaps_lt: String
  totalSwaps_gte: String
  totalSwaps_lte: String
  totalSwaps_in: [String!]
  totalSwaps_not_in: [String!]
  totalSwaps_contains: String
  totalSwaps_not_contains: String
  totalSwaps_starts_with: String
  totalSwaps_not_starts_with: String
  totalSwaps_ends_with: String
  totalSwaps_not_ends_with: String
}
type BoostDirector {
  id: ID!
  stakingContract: Token!
  whitelisted(skip: Int = 0, first: Int = 100, orderBy: BoostedSavingsVault_orderBy, orderDirection: OrderDirection, where: BoostedSavingsVault_filter): [BoostedSavingsVault!]!
}
enum BoostDirector_orderBy {
  id
  stakingContract
  whitelisted
}
input BoostDirector_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  stakingContract: String
  stakingContract_not: String
  stakingContract_gt: String
  stakingContract_lt: String
  stakingContract_gte: String
  stakingContract_lte: String
  stakingContract_in: [String!]
  stakingContract_not_in: [String!]
  stakingContract_contains: String
  stakingContract_not_contains: String
  stakingContract_starts_with: String
  stakingContract_not_starts_with: String
  stakingContract_ends_with: String
  stakingContract_not_ends_with: String
  whitelisted: [String!]
  whitelisted_not: [String!]
  whitelisted_contains: [String!]
  whitelisted_not_contains: [String!]
}
enum Transaction_orderBy {
  id
  hash
  block
  timestamp
  sender
}
input Transaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: Bytes
  hash_not: Bytes
  hash_in: [Bytes!]
  hash_not_in: [Bytes!]
  hash_contains: Bytes
  hash_not_contains: Bytes
  block: Int
  block_not: Int
  block_gt: Int
  block_lt: Int
  block_gte: Int
  block_lte: Int
  block_in: [Int!]
  block_not_in: [Int!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  sender: Bytes
  sender_not: Bytes
  sender_in: [Bytes!]
  sender_not_in: [Bytes!]
  sender_contains: Bytes
  sender_not_contains: Bytes
}
"""The type for the top-level _meta field"""
type _Meta_ {
  """
  Information about a specific subgraph block. The hash of the block
  will be null if the _meta field has a block constraint that asks for
  a block number. It will be filled if the _meta field has no block constraint
  and therefore asks for the latest  block
  """
  block: _Block_!
  """The deployment ID"""
  deployment: String!
  """If `true`, the subgraph encountered indexing errors at some past block"""
  hasIndexingErrors: Boolean!
}
type _Block_ {
  """The hash of the block"""
  hash: Bytes
  """The block number"""
  number: Int!
}
type Subscription {
  token(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Token
  tokens(
    skip: Int = 0
    first: Int = 100
    orderBy: Token_orderBy
    orderDirection: OrderDirection
    where: Token_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Token!]!
  metric(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Metric
  metrics(
    skip: Int = 0
    first: Int = 100
    orderBy: Metric_orderBy
    orderDirection: OrderDirection
    where: Metric_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Metric!]!
  counter(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Counter
  counters(
    skip: Int = 0
    first: Int = 100
    orderBy: Counter_orderBy
    orderDirection: OrderDirection
    where: Counter_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Counter!]!
  basset(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Basset
  bassets(
    skip: Int = 0
    first: Int = 100
    orderBy: Basset_orderBy
    orderDirection: OrderDirection
    where: Basset_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Basset!]!
  basket(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Basket
  baskets(
    skip: Int = 0
    first: Int = 100
    orderBy: Basket_orderBy
    orderDirection: OrderDirection
    where: Basket_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Basket!]!
  ampData(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): AmpData
  ampDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: AmpData_orderBy
    orderDirection: OrderDirection
    where: AmpData_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [AmpData!]!
  boostedSavingsVault(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostedSavingsVault
  boostedSavingsVaults(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostedSavingsVault_orderBy
    orderDirection: OrderDirection
    where: BoostedSavingsVault_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostedSavingsVault!]!
  account(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Account
  accounts(
    skip: Int = 0
    first: Int = 100
    orderBy: Account_orderBy
    orderDirection: OrderDirection
    where: Account_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Account!]!
  boostedSavingsVaultAccount(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostedSavingsVaultAccount
  boostedSavingsVaultAccounts(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostedSavingsVaultAccount_orderBy
    orderDirection: OrderDirection
    where: BoostedSavingsVaultAccount_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostedSavingsVaultAccount!]!
  boostedSavingsVaultRewardEntry(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostedSavingsVaultRewardEntry
  boostedSavingsVaultRewardEntries(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostedSavingsVaultRewardEntry_orderBy
    orderDirection: OrderDirection
    where: BoostedSavingsVaultRewardEntry_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostedSavingsVaultRewardEntry!]!
  boostedSavingsVaultStakeTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostedSavingsVaultStakeTransaction
  boostedSavingsVaultStakeTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostedSavingsVaultStakeTransaction_orderBy
    orderDirection: OrderDirection
    where: BoostedSavingsVaultStakeTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostedSavingsVaultStakeTransaction!]!
  boostedSavingsVaultRewardAddedTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostedSavingsVaultRewardAddedTransaction
  boostedSavingsVaultRewardAddedTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostedSavingsVaultRewardAddedTransaction_orderBy
    orderDirection: OrderDirection
    where: BoostedSavingsVaultRewardAddedTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostedSavingsVaultRewardAddedTransaction!]!
  boostedSavingsVaultRewardPaidTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostedSavingsVaultRewardPaidTransaction
  boostedSavingsVaultRewardPaidTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostedSavingsVaultRewardPaidTransaction_orderBy
    orderDirection: OrderDirection
    where: BoostedSavingsVaultRewardPaidTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostedSavingsVaultRewardPaidTransaction!]!
  boostedSavingsVaultWithdrawTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostedSavingsVaultWithdrawTransaction
  boostedSavingsVaultWithdrawTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostedSavingsVaultWithdrawTransaction_orderBy
    orderDirection: OrderDirection
    where: BoostedSavingsVaultWithdrawTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostedSavingsVaultWithdrawTransaction!]!
  feederPool(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): FeederPool
  feederPools(
    skip: Int = 0
    first: Int = 100
    orderBy: FeederPool_orderBy
    orderDirection: OrderDirection
    where: FeederPool_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [FeederPool!]!
  feederPoolAccount(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): FeederPoolAccount
  feederPoolAccounts(
    skip: Int = 0
    first: Int = 100
    orderBy: FeederPoolAccount_orderBy
    orderDirection: OrderDirection
    where: FeederPoolAccount_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [FeederPoolAccount!]!
  fpswapTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): FPSwapTransaction
  fpswapTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: FPSwapTransaction_orderBy
    orderDirection: OrderDirection
    where: FPSwapTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [FPSwapTransaction!]!
  fpmintSingleTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): FPMintSingleTransaction
  fpmintSingleTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: FPMintSingleTransaction_orderBy
    orderDirection: OrderDirection
    where: FPMintSingleTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [FPMintSingleTransaction!]!
  fpmintMultiTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): FPMintMultiTransaction
  fpmintMultiTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: FPMintMultiTransaction_orderBy
    orderDirection: OrderDirection
    where: FPMintMultiTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [FPMintMultiTransaction!]!
  fpredeemTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): FPRedeemTransaction
  fpredeemTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: FPRedeemTransaction_orderBy
    orderDirection: OrderDirection
    where: FPRedeemTransaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [FPRedeemTransaction!]!
  boostDirector(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): BoostDirector
  boostDirectors(
    skip: Int = 0
    first: Int = 100
    orderBy: BoostDirector_orderBy
    orderDirection: OrderDirection
    where: BoostDirector_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [BoostDirector!]!
  transaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): Transaction
  transactions(
    skip: Int = 0
    first: Int = 100
    orderBy: Transaction_orderBy
    orderDirection: OrderDirection
    where: Transaction_filter
    """
    The block at which the query should be executed. Can either be an `{ number:
    Int }` containing the block number or a `{ hash: Bytes }` value containing a
    block hash. Defaults to the latest block when omitted.
    """
    block: Block_height
  ): [Transaction!]!
  """Access to subgraph metadata"""
  _meta(block: Block_height): _Meta_
}
enum _SubgraphErrorPolicy_ {
  """Data will be returned even if the subgraph has indexing errors"""
  allow
  """If the subgraph has indexing errors, data will be omitted. The default."""
  deny
}